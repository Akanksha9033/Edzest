{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\happy\\\\Downloads\\\\edzest-website-3\\\\src\\\\components\\\\Admin\\\\CreateEvent.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import RegisterForm from './RegisterForm'; // ‚úÖ Register form modal\n\n// const CreateEvent = () => {\n//   const [event, setEvent] = useState({\n//     title: '',\n//     description: '',\n//     date: '',\n//     time: '',\n//     type: '',\n//     speaker: '',\n//     link: '',\n//     image: ''\n//   });\n\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [editingEventId, setEditingEventId] = useState(null);\n//   const [showRegisterForm, setShowRegisterForm] = useState(false);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setEvent({ ...event, [name]: value });\n//   };\n\n//   const handleImageChange = (e) => {\n//     const file = e.target.files[0];\n//     const reader = new FileReader();\n//     reader.onloadend = () => {\n//       setEvent({ ...event, image: reader.result });\n//     };\n//     if (file) {\n//       reader.readAsDataURL(file);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem('token');\n//       const url = isEditing\n//         ? `http://localhost:5000/api/events/${editingEventId}`\n//         : 'http://localhost:5000/api/events';\n//       const method = isEditing ? 'put' : 'post';\n\n//       const res = await axios[method](url, event, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n\n//       alert(isEditing ? 'Event updated successfully!' : 'Event created successfully!');\n\n//       setEvent({\n//         title: '', description: '', date: '', time: '',\n//         type: '', speaker: '', link: '', image: ''\n//       });\n//       setIsEditing(false);\n//       setEditingEventId(null);\n//     } catch (error) {\n//       console.error(error);\n//       alert('Error saving event');\n//     }\n//   };\n\n//   // This would be triggered from a list or other component showing events\n//   const handleEdit = (eventData) => {\n//     setEvent(eventData);\n//     setIsEditing(true);\n//     setEditingEventId(eventData._id);\n//   };\n\n//   return (\n//     <div className=\"p-6 max-w-xl mx-auto\">\n//       <h2 className=\"text-2xl font-bold mb-4\">{isEditing ? 'Modify Event' : 'Create Event'}</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         <input type=\"text\" name=\"title\" placeholder=\"Title\" value={event.title} onChange={handleChange} className=\"w-full border p-2\" required />\n//         <textarea name=\"description\" placeholder=\"Description\" value={event.description} onChange={handleChange} className=\"w-full border p-2\" required></textarea>\n//         <input type=\"date\" name=\"date\" value={event.date} onChange={handleChange} className=\"w-full border p-2\" required />\n//         <input type=\"time\" name=\"time\" value={event.time} onChange={handleChange} className=\"w-full border p-2\" required />\n//         <input type=\"text\" name=\"type\" placeholder=\"Event Type (e.g., Webinar)\" value={event.type} onChange={handleChange} className=\"w-full border p-2\" required />\n//         <input type=\"text\" name=\"speaker\" placeholder=\"Speaker\" value={event.speaker} onChange={handleChange} className=\"w-full border p-2\" required />\n//         <input type=\"url\" name=\"link\" placeholder=\"Event Link\" value={event.link} onChange={handleChange} className=\"w-full border p-2\" required />\n//         <input type=\"file\" onChange={handleImageChange} accept=\"image/*\" className=\"w-full border p-2\" />\n//         <button type=\"submit\" className=\"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700\">\n//           {isEditing ? 'Update Event' : 'Create Event'}\n//         </button>\n//       </form>\n\n//       {showRegisterForm && (\n//         <RegisterForm\n//           event={event}\n//           onClose={() => setShowRegisterForm(false)}\n//         />\n//       )}\n\n//       <a\n//         href=\"http://localhost:5000/api/register/download\"\n//         target=\"_blank\"\n//         rel=\"noopener noreferrer\"\n//         className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 mt-4 inline-block\"\n//       >\n//         Download Registrations\n//       </a>\n//     </div>\n//   );\n// };\n\n// export default CreateEvent;\n\n// CreateEvent.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import RegisterForm from './RegisterForm'; // ‚úÖ Register form modal\n\n// const CreateEvent = () => {\n//   const [event, setEvent] = useState({\n//     title: '',\n//     description: '',\n//     date: '',\n//     time: '',\n//     type: '',\n//     speaker: '',\n//     link: '',\n//     image: ''\n//   });\n\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [editingEventId, setEditingEventId] = useState(null);\n//   const [showRegisterForm, setShowRegisterForm] = useState(false);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setEvent({ ...event, [name]: value });\n//   };\n\n//   const handleImageChange = (e) => {\n//     const file = e.target.files[0];\n//     const reader = new FileReader();\n//     reader.onloadend = () => {\n//       setEvent({ ...event, image: reader.result });\n//     };\n//     if (file) {\n//       reader.readAsDataURL(file);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem('token');\n//       const url = isEditing\n//         ? `http://localhost:5000/api/events/${editingEventId}`\n//         : 'http://localhost:5000/api/events';\n//       const method = isEditing ? 'put' : 'post';\n\n//       const res = await axios[method](url, event, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n\n//       alert(isEditing ? 'Event updated successfully!' : 'Event created successfully!');\n\n//       setEvent({\n//         title: '', description: '', date: '', time: '',\n//         type: '', speaker: '', link: '', image: ''\n//       });\n//       setIsEditing(false);\n//       setEditingEventId(null);\n//     } catch (error) {\n//       console.error(error);\n//       alert('Error saving event');\n//     }\n//   };\n\n//   const handleEdit = (eventData) => {\n//     setEvent(eventData);\n//     setIsEditing(true);\n//     setEditingEventId(eventData._id);\n//   };\n\n//   return (\n//     <div className=\"p-6 max-w-xl mx-auto\">\n//       <h2 className=\"text-2xl font-bold mb-4\">{isEditing ? 'Modify Event' : 'Create Event'}</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         <input type=\"text\" name=\"title\" placeholder=\"Title\" value={event.title} onChange={handleChange} className=\"w-full border p-2\" required />\n//         <textarea name=\"description\" placeholder=\"Description\" value={event.description} onChange={handleChange} className=\"w-full border p-2\" required></textarea>\n//         <input type=\"date\" name=\"date\" value={event.date} onChange={handleChange} className=\"w-full border p-2\" required />\n//         <input type=\"time\" name=\"time\" value={event.time} onChange={handleChange} className=\"w-full border p-2\" required />\n//         <input type=\"text\" name=\"type\" placeholder=\"Event Type (e.g., Webinar)\" value={event.type} onChange={handleChange} className=\"w-full border p-2\" required />\n//         <input type=\"text\" name=\"speaker\" placeholder=\"Speaker\" value={event.speaker} onChange={handleChange} className=\"w-full border p-2\" required />\n//         <input type=\"url\" name=\"link\" placeholder=\"Event Link\" value={event.link} onChange={handleChange} className=\"w-full border p-2\" required />\n//         <input type=\"file\" onChange={handleImageChange} accept=\"image/*\" className=\"w-full border p-2\" />\n//         <button type=\"submit\" className=\"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700\">\n//           {isEditing ? 'Update Event' : 'Create Event'}\n//         </button>\n//       </form>\n\n//       {showRegisterForm && (\n//         <RegisterForm\n//           event={event}\n//           onClose={() => setShowRegisterForm(false)}\n//         />\n//       )}\n\n//       {/* ‚úÖ Download Buttons for Excel Files */}\n//       <div className=\"mt-6 space-y-2\">\n//         <a\n//           href=\"http://localhost:5000/api/register/download\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//           className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 inline-block w-full text-center\"\n//         >\n//           üìÅ Download Event Data (Excel)\n//         </a>\n\n//         <a\n//           href=\"http://localhost:5000/api/register/users/download\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//           className=\"bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700 inline-block w-full text-center\"\n//         >\n//           üë§ Download User Registrations (Excel)\n//         </a>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CreateEvent;\n\n// CreateEvent.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import RegisterForm from './RegisterForm'; // ‚úÖ Register form modal\n\n// const CreateEvent = () => {\n//   const [event, setEvent] = useState({\n//     title: '',\n//     description: '',\n//     date: '',\n//     time: '',\n//     type: '',\n//     speaker: '',\n//     link: '',\n//     image: ''\n//   });\n\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [editingEventId, setEditingEventId] = useState(null);\n//   const [showRegisterForm, setShowRegisterForm] = useState(false);\n//   const [eventsList, setEventsList] = useState([]);\n\n//   useEffect(() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const res = await axios.get('http://localhost:5000/api/events');\n//       setEventsList(res.data);\n//     } catch (error) {\n//       console.error('Error fetching events:', error);\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setEvent({ ...event, [name]: value });\n//   };\n\n//   const handleImageChange = (e) => {\n//     const file = e.target.files[0];\n//     const reader = new FileReader();\n//     reader.onloadend = () => {\n//       setEvent({ ...event, image: reader.result });\n//     };\n//     if (file) {\n//       reader.readAsDataURL(file);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem('token');\n//       const url = isEditing\n//         ? `http://localhost:5000/api/events/${editingEventId}`\n//         : 'http://localhost:5000/api/events';\n//       const method = isEditing ? 'put' : 'post';\n\n//       const res = await axios[method](url, event, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n\n//       alert(isEditing ? 'Event updated successfully!' : 'Event created successfully!');\n\n//       setEvent({\n//         title: '', description: '', date: '', time: '',\n//         type: '', speaker: '', link: '', image: ''\n//       });\n//       setIsEditing(false);\n//       setEditingEventId(null);\n//       fetchEvents();\n//     } catch (error) {\n//       console.error(error);\n//       alert('Error saving event');\n//     }\n//   };\n\n//   const handleEdit = (eventData) => {\n//     setEvent(eventData);\n//     setIsEditing(true);\n//     setEditingEventId(eventData._id);\n//   };\n\n//   const handleDelete = async (id) => {\n//     if (window.confirm('Are you sure you want to delete this event?')) {\n//       try {\n//         const token = localStorage.getItem('token');\n//         await axios.delete(`http://localhost:5000/api/events/${id}`, {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         });\n//         fetchEvents();\n//         alert('Event deleted successfully');\n//       } catch (err) {\n//         console.error('Error deleting event:', err);\n//         alert('Failed to delete event');\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className=\"p-6 max-w-xl mx-auto\">\n//       <h2 className=\"text-2xl font-bold mb-4\">{isEditing ? 'Modify Event' : 'Create Event'}</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         <input type=\"text\" name=\"title\" placeholder=\"Title\" value={event.title} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\n//         <textarea name=\"description\" placeholder=\"Description\" value={event.description} onChange={handleChange} className=\"w-full border p-2 text-sm\" required></textarea>\n//         <input type=\"date\" name=\"date\" value={event.date} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\n//         <input type=\"time\" name=\"time\" value={event.time} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\n//         <input type=\"text\" name=\"type\" placeholder=\"Event Type (e.g., Webinar)\" value={event.type} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\n//         <input type=\"text\" name=\"speaker\" placeholder=\"Speaker\" value={event.speaker} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\n//         <input type=\"url\" name=\"link\" placeholder=\"Event Link\" value={event.link} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\n//         <input type=\"file\" onChange={handleImageChange} accept=\"image/*\" className=\"w-full border p-2 text-sm\" />\n//         <div className=\"flex gap-3\">\n//           <button type=\"submit\" className=\"bg-blue-600 text-white text-sm py-1 px-3 rounded hover:bg-blue-700\">\n//             {isEditing ? 'Update' : 'Create'}\n//           </button>\n//         </div>\n//       </form>\n\n//       {showRegisterForm && (\n//         <RegisterForm\n//           event={event}\n//           onClose={() => setShowRegisterForm(false)}\n//         />\n//       )}\n\n//       {/* ‚úÖ Event List with Delete/Edit */}\n//       <div className=\"mt-8\">\n//         <h3 className=\"text-lg font-semibold mb-2\">All Events</h3>\n//         {eventsList.map((evt) => (\n//           <div key={evt._id} className=\"border p-3 rounded mb-3 shadow-sm\">\n//             <p className=\"text-sm font-semibold\">{evt.title}</p>\n//             <p className=\"text-xs text-gray-600\">{evt.date} at {evt.time}</p>\n//             <div className=\"mt-2 flex gap-2\">\n//               <button onClick={() => handleEdit(evt)} className=\"text-sm px-2 py-1 bg-yellow-500 text-white rounded hover:bg-yellow-600\">Edit</button>\n//               <button onClick={() => handleDelete(evt._id)} className=\"text-sm px-2 py-1 bg-red-600 text-white rounded hover:bg-red-700\">Delete</button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* ‚úÖ Download Buttons */}\n//       <div className=\"mt-6 space-y-2\">\n//         <a\n//           href=\"http://localhost:5000/api/register/download\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//           className=\"bg-green-600 text-white text-sm px-3 py-1 rounded hover:bg-green-700 inline-block w-full text-center\"\n//         >\n//           üìÅ Download Event Data (Excel)\n//         </a>\n\n//         <a\n//           href=\"http://localhost:5000/api/register/users/download\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//           className=\"bg-purple-600 text-white text-sm px-3 py-1 rounded hover:bg-purple-700 inline-block w-full text-center\"\n//         >\n//           üë§ Download User Registrations (Excel)\n//         </a>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default CreateEvent;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import RegisterForm from './RegisterForm'; // ‚úÖ Register form modal\n\n// const CreateEvent = () => {\n//   const [event, setEvent] = useState({\n//     title: '',\n//     description: '',\n//     date: '',\n//     time: '',\n//     type: '',\n//     speaker: '',\n//     link: '',\n//     image: ''\n//   });\n\n//   const [isEditing, setIsEditing] = useState(false);\n//   const [editingEventId, setEditingEventId] = useState(null);\n//   const [showRegisterForm, setShowRegisterForm] = useState(false);\n//   const [eventsList, setEventsList] = useState([]);\n\n//   useEffect(() => {\n//     fetchEvents();\n//   }, []);\n\n//   const fetchEvents = async () => {\n//     try {\n//       const res = await axios.get('http://localhost:5000/api/events');\n//       console.log(\"üìã All Events from DB:\", res.data);\n//       setEventsList(res.data);\n//     } catch (error) {\n//       console.error('Error fetching events:', error);\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setEvent({ ...event, [name]: value });\n//   };\n\n//   const handleImageChange = (e) => {\n//     const file = e.target.files[0];\n//     const reader = new FileReader();\n//     reader.onloadend = () => {\n//       setEvent({ ...event, image: reader.result });\n//     };\n//     if (file) {\n//       reader.readAsDataURL(file);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem('token');\n//       const url = isEditing\n//         ? `http://localhost:5000/api/events/${editingEventId}`\n//         : 'http://localhost:5000/api/events';\n//       const method = isEditing ? 'put' : 'post';\n\n//       const res = await axios[method](url, event, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n\n//       alert(isEditing ? 'Event updated successfully!' : 'Event created successfully!');\n\n//       setEvent({\n//         title: '', description: '', date: '', time: '',\n//         type: '', speaker: '', link: '', image: ''\n//       });\n//       setIsEditing(false);\n//       setEditingEventId(null);\n//       fetchEvents();\n//     } catch (error) {\n//       console.error(error);\n//       alert('Error saving event');\n//     }\n//   };\n\n//   const handleEdit = (eventData) => {\n//     setEvent(eventData);\n//     setIsEditing(true);\n//     setEditingEventId(eventData._id);\n//   };\n\n//   const handleDelete = async (id) => {\n//     console.log(\"üóëÔ∏è Trying to delete event with ID:\", id);\n//     if (window.confirm('Are you sure you want to delete this event?')) {\n//       try {\n//         const token = localStorage.getItem('token');\n//         await axios.delete(`http://localhost:5000/api/events/${id}`, {\n//           headers: {\n//             Authorization: `Bearer ${token}`,\n//           },\n//         });\n//         fetchEvents();\n//         alert('Event deleted successfully');\n//       } catch (err) {\n//         console.error('Error deleting event:', err);\n//         alert('Failed to delete event');\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className=\"p-6 max-w-xl mx-auto\">\n//       <h2 className=\"text-2xl font-bold mb-4\">{isEditing ? 'Modify Event' : 'Create Event'}</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         <input type=\"text\" name=\"title\" placeholder=\"Title\" value={event.title} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\n//         <textarea name=\"description\" placeholder=\"Description\" value={event.description} onChange={handleChange} className=\"w-full border p-2 text-sm\" required></textarea>\n//         <input type=\"date\" name=\"date\" value={event.date} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\n//         <input type=\"time\" name=\"time\" value={event.time} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\n//         <input type=\"text\" name=\"type\" placeholder=\"Event Type (e.g., Webinar)\" value={event.type} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\n//         <input type=\"text\" name=\"speaker\" placeholder=\"Speaker\" value={event.speaker} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\n//         <input type=\"url\" name=\"link\" placeholder=\"Event Link\" value={event.link} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\n//         <input type=\"file\" onChange={handleImageChange} accept=\"image/*\" className=\"w-full border p-2 text-sm\" />\n//         <div className=\"flex gap-3\">\n//           <button type=\"submit\" className=\"bg-[#4748ac] text-white text-sm py-1 px-3 rounded hover:bg-blue-700\">\n//             {isEditing ? 'Update' : 'Create'}\n//           </button>\n//         </div>\n//       </form>\n\n//       {showRegisterForm && (\n//         <RegisterForm\n//           event={event}\n//           onClose={() => setShowRegisterForm(false)}\n//         />\n//       )}\n\n//       {/* ‚úÖ Event List with Delete/Edit */}\n//       <div className=\"mt-8\">\n//         <h3 className=\"text-lg font-semibold mb-2\">All Events</h3>\n//         {eventsList.map((evt) => {\n//           console.log(\"üîç Event ID:\", evt._id);\n//           return (\n//             <div key={evt._id} className=\"border p-3 rounded mb-3 shadow-sm\">\n//               <p className=\"text-sm font-semibold\">{evt.title}</p>\n//               <p className=\"text-xs text-gray-600\">{evt.date} at {evt.time}</p>\n//               <div className=\"mt-2 flex gap-2\">\n//                 <button onClick={() => handleEdit(evt)} className=\"text-sm px-2 py-1 bg-[#4748ac] text-white rounded hover:bg-yellow-600\">Edit</button>\n//                 <button onClick={() => handleDelete(evt._id)} className=\"text-sm px-2 py-1 bg-red-600 text-white rounded hover:bg-red-700\">Delete</button>\n//               </div>\n//             </div>\n//           );\n//         })}\n//       </div>\n\n//       {/* ‚úÖ Download Buttons */}\n//       <div className=\"mt-6 flex justify-center gap-4\">\n//   <a\n//     href=\"http://localhost:5000/api/register/download\"\n//     target=\"_blank\"\n//     rel=\"noopener noreferrer\"\n//     className=\"bg-green-600 text-white text-sm px-2 py-3 rounded hover:bg-green-700 w-1/4 text-center no-underline\"\n//     style={{ textDecoration: 'none' }}\n//   >\n//     üìÅ Download Event Data (Excel)\n//   </a>\n\n//   <a\n//     href=\"http://localhost:5000/api/register/users/download\"\n//     target=\"_blank\"\n//     rel=\"noopener noreferrer\"\n//     className=\"bg-[#4748ac] text-white text-sm p2-3 py-3 rounded bg-[#4748ac] w-1/4 text-center no-underline\"\n//     style={{ textDecoration: 'none' }}\n//   >\n//     üë§ Download User Registrations (Excel)\n//   </a>\n// </div>\n\n//     </div>\n//   );\n// };\n\n// export default CreateEvent;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport RegisterForm from './RegisterForm'; // ‚úÖ Register form modal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateEvent = () => {\n  _s();\n  const [event, setEvent] = useState({\n    title: '',\n    description: '',\n    date: '',\n    time: '',\n    type: '',\n    speaker: '',\n    link: '',\n    image: ''\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingEventId, setEditingEventId] = useState(null);\n  const [showRegisterForm, setShowRegisterForm] = useState(false);\n  const [eventsList, setEventsList] = useState([]);\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  const fetchEvents = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/events');\n      console.log(\"üìã All Events from DB:\", res.data);\n      setEventsList(res.data);\n    } catch (error) {\n      console.error('Error fetching events:', error);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEvent({\n      ...event,\n      [name]: value\n    });\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = document.createElement('canvas');\n          const targetAspect = 16 / 9;\n          const currentAspect = img.width / img.height;\n          let drawWidth, drawHeight;\n          if (currentAspect > targetAspect) {\n            drawHeight = img.height;\n            drawWidth = img.height * targetAspect;\n          } else {\n            drawWidth = img.width;\n            drawHeight = img.width / targetAspect;\n          }\n          canvas.width = 1280;\n          canvas.height = 720;\n          const ctx = canvas.getContext('2d');\n          ctx.fillStyle = '#fff';\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n          ctx.drawImage(img, (img.width - drawWidth) / 2, (img.height - drawHeight) / 2, drawWidth, drawHeight, 0, 0, canvas.width, canvas.height);\n          const croppedDataUrl = canvas.toDataURL('image/jpeg');\n          setEvent({\n            ...event,\n            image: croppedDataUrl\n          });\n        };\n        img.src = reader.result;\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      const url = isEditing ? `http://localhost:5000/api/events/${editingEventId}` : 'http://localhost:5000/api/events';\n      const method = isEditing ? 'put' : 'post';\n      const res = await axios[method](url, event, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(isEditing ? 'Event updated successfully!' : 'Event created successfully!');\n      setEvent({\n        title: '',\n        description: '',\n        date: '',\n        time: '',\n        type: '',\n        speaker: '',\n        link: '',\n        image: ''\n      });\n      setIsEditing(false);\n      setEditingEventId(null);\n      fetchEvents();\n    } catch (error) {\n      console.error(error);\n      alert('Error saving event');\n    }\n  };\n  const handleEdit = eventData => {\n    setEvent(eventData);\n    setIsEditing(true);\n    setEditingEventId(eventData._id);\n  };\n  const handleDelete = async id => {\n    console.log(\"üóëÔ∏è Trying to delete event with ID:\", id);\n    if (window.confirm('Are you sure you want to delete this event?')) {\n      try {\n        const token = localStorage.getItem('token');\n        await axios.delete(`http://localhost:5000/api/events/${id}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        fetchEvents();\n        alert('Event deleted successfully');\n      } catch (err) {\n        console.error('Error deleting event:', err);\n        alert('Failed to delete event');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: isEditing ? 'Modify Event' : 'Create Event'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: event.title,\n        onChange: handleChange,\n        className: \"w-full border p-2 text-sm\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Description\",\n        value: event.description,\n        onChange: handleChange,\n        className: \"w-full border p-2 text-sm\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        value: event.date,\n        onChange: handleChange,\n        className: \"w-full border p-2 text-sm\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"time\",\n        value: event.time,\n        onChange: handleChange,\n        className: \"w-full border p-2 text-sm\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"type\",\n        placeholder: \"Event Type (e.g., Webinar)\",\n        value: event.type,\n        onChange: handleChange,\n        className: \"w-full border p-2 text-sm\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"speaker\",\n        placeholder: \"Speaker\",\n        value: event.speaker,\n        onChange: handleChange,\n        className: \"w-full border p-2 text-sm\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        name: \"link\",\n        placeholder: \"Event Link\",\n        value: event.link,\n        onChange: handleChange,\n        className: \"w-full border p-2 text-sm\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageChange,\n        accept: \"image/*\",\n        className: \"w-full border p-2 text-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-[#4748ac] text-white text-sm py-1 px-3 rounded hover:bg-blue-700\",\n          children: isEditing ? 'Update' : 'Create'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 7\n    }, this), showRegisterForm && /*#__PURE__*/_jsxDEV(RegisterForm, {\n      event: event,\n      onClose: () => setShowRegisterForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: \"All Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 9\n      }, this), eventsList.map(evt => {\n        console.log(\"üîç Event ID:\", evt._id);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border p-3 rounded mb-3 shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm font-semibold\",\n            children: evt.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-xs text-gray-600\",\n            children: [evt.date, \" at \", evt.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(evt),\n              className: \"text-sm px-2 py-1 bg-[#4748ac] text-white rounded hover:bg-yellow-600\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(evt._id),\n              className: \"text-sm px-2 py-1 bg-red-600 text-white rounded hover:bg-red-700\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 15\n          }, this)]\n        }, evt._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 flex justify-center gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://localhost:5000/api/register/download\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"bg-green-600 text-white text-sm px-2 py-3 rounded hover:bg-green-700 w-1/4 text-center no-underline\",\n        style: {\n          textDecoration: 'none'\n        },\n        children: \"\\uD83D\\uDCC1 Download Event Data (Excel)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://localhost:5000/api/register/users/download\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"bg-[#4748ac] text-white text-sm p2-3 py-3 rounded bg-[#4748ac] w-1/4 text-center no-underline\",\n        style: {\n          textDecoration: 'none'\n        },\n        children: \"\\uD83D\\uDC64 Download User Registrations (Excel)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 721,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateEvent, \"Rh3LfO3YulKhkHxSA7z8y6uIStk=\");\n_c = CreateEvent;\nexport default CreateEvent;\nvar _c;\n$RefreshReg$(_c, \"CreateEvent\");","map":{"version":3,"names":["React","useState","useEffect","axios","RegisterForm","jsxDEV","_jsxDEV","CreateEvent","_s","event","setEvent","title","description","date","time","type","speaker","link","image","isEditing","setIsEditing","editingEventId","setEditingEventId","showRegisterForm","setShowRegisterForm","eventsList","setEventsList","fetchEvents","res","get","console","log","data","error","handleChange","e","name","value","target","handleImageChange","file","files","reader","FileReader","onloadend","img","Image","onload","canvas","document","createElement","targetAspect","currentAspect","width","height","drawWidth","drawHeight","ctx","getContext","fillStyle","fillRect","drawImage","croppedDataUrl","toDataURL","src","result","readAsDataURL","handleSubmit","preventDefault","token","localStorage","getItem","url","method","headers","Authorization","alert","handleEdit","eventData","_id","handleDelete","id","window","confirm","delete","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onChange","required","accept","onClose","map","evt","onClick","href","rel","style","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/happy/Downloads/edzest-website-3/src/components/Admin/CreateEvent.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import RegisterForm from './RegisterForm'; // ‚úÖ Register form modal\r\n\r\n// const CreateEvent = () => {\r\n//   const [event, setEvent] = useState({\r\n//     title: '',\r\n//     description: '',\r\n//     date: '',\r\n//     time: '',\r\n//     type: '',\r\n//     speaker: '',\r\n//     link: '',\r\n//     image: ''\r\n//   });\r\n\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [editingEventId, setEditingEventId] = useState(null);\r\n//   const [showRegisterForm, setShowRegisterForm] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setEvent({ ...event, [name]: value });\r\n//   };\r\n\r\n//   const handleImageChange = (e) => {\r\n//     const file = e.target.files[0];\r\n//     const reader = new FileReader();\r\n//     reader.onloadend = () => {\r\n//       setEvent({ ...event, image: reader.result });\r\n//     };\r\n//     if (file) {\r\n//       reader.readAsDataURL(file);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n//       const url = isEditing\r\n//         ? `http://localhost:5000/api/events/${editingEventId}`\r\n//         : 'http://localhost:5000/api/events';\r\n//       const method = isEditing ? 'put' : 'post';\r\n\r\n//       const res = await axios[method](url, event, {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       });\r\n\r\n//       alert(isEditing ? 'Event updated successfully!' : 'Event created successfully!');\r\n\r\n//       setEvent({\r\n//         title: '', description: '', date: '', time: '',\r\n//         type: '', speaker: '', link: '', image: ''\r\n//       });\r\n//       setIsEditing(false);\r\n//       setEditingEventId(null);\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       alert('Error saving event');\r\n//     }\r\n//   };\r\n\r\n//   // This would be triggered from a list or other component showing events\r\n//   const handleEdit = (eventData) => {\r\n//     setEvent(eventData);\r\n//     setIsEditing(true);\r\n//     setEditingEventId(eventData._id);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6 max-w-xl mx-auto\">\r\n//       <h2 className=\"text-2xl font-bold mb-4\">{isEditing ? 'Modify Event' : 'Create Event'}</h2>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//         <input type=\"text\" name=\"title\" placeholder=\"Title\" value={event.title} onChange={handleChange} className=\"w-full border p-2\" required />\r\n//         <textarea name=\"description\" placeholder=\"Description\" value={event.description} onChange={handleChange} className=\"w-full border p-2\" required></textarea>\r\n//         <input type=\"date\" name=\"date\" value={event.date} onChange={handleChange} className=\"w-full border p-2\" required />\r\n//         <input type=\"time\" name=\"time\" value={event.time} onChange={handleChange} className=\"w-full border p-2\" required />\r\n//         <input type=\"text\" name=\"type\" placeholder=\"Event Type (e.g., Webinar)\" value={event.type} onChange={handleChange} className=\"w-full border p-2\" required />\r\n//         <input type=\"text\" name=\"speaker\" placeholder=\"Speaker\" value={event.speaker} onChange={handleChange} className=\"w-full border p-2\" required />\r\n//         <input type=\"url\" name=\"link\" placeholder=\"Event Link\" value={event.link} onChange={handleChange} className=\"w-full border p-2\" required />\r\n//         <input type=\"file\" onChange={handleImageChange} accept=\"image/*\" className=\"w-full border p-2\" />\r\n//         <button type=\"submit\" className=\"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700\">\r\n//           {isEditing ? 'Update Event' : 'Create Event'}\r\n//         </button>\r\n//       </form>\r\n\r\n//       {showRegisterForm && (\r\n//         <RegisterForm\r\n//           event={event}\r\n//           onClose={() => setShowRegisterForm(false)}\r\n//         />\r\n//       )}\r\n\r\n//       <a\r\n//         href=\"http://localhost:5000/api/register/download\"\r\n//         target=\"_blank\"\r\n//         rel=\"noopener noreferrer\"\r\n//         className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 mt-4 inline-block\"\r\n//       >\r\n//         Download Registrations\r\n//       </a>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateEvent;\r\n\r\n\r\n// CreateEvent.js\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import RegisterForm from './RegisterForm'; // ‚úÖ Register form modal\r\n\r\n// const CreateEvent = () => {\r\n//   const [event, setEvent] = useState({\r\n//     title: '',\r\n//     description: '',\r\n//     date: '',\r\n//     time: '',\r\n//     type: '',\r\n//     speaker: '',\r\n//     link: '',\r\n//     image: ''\r\n//   });\r\n\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [editingEventId, setEditingEventId] = useState(null);\r\n//   const [showRegisterForm, setShowRegisterForm] = useState(false);\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setEvent({ ...event, [name]: value });\r\n//   };\r\n\r\n//   const handleImageChange = (e) => {\r\n//     const file = e.target.files[0];\r\n//     const reader = new FileReader();\r\n//     reader.onloadend = () => {\r\n//       setEvent({ ...event, image: reader.result });\r\n//     };\r\n//     if (file) {\r\n//       reader.readAsDataURL(file);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n//       const url = isEditing\r\n//         ? `http://localhost:5000/api/events/${editingEventId}`\r\n//         : 'http://localhost:5000/api/events';\r\n//       const method = isEditing ? 'put' : 'post';\r\n\r\n//       const res = await axios[method](url, event, {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       });\r\n\r\n//       alert(isEditing ? 'Event updated successfully!' : 'Event created successfully!');\r\n\r\n//       setEvent({\r\n//         title: '', description: '', date: '', time: '',\r\n//         type: '', speaker: '', link: '', image: ''\r\n//       });\r\n//       setIsEditing(false);\r\n//       setEditingEventId(null);\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       alert('Error saving event');\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (eventData) => {\r\n//     setEvent(eventData);\r\n//     setIsEditing(true);\r\n//     setEditingEventId(eventData._id);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6 max-w-xl mx-auto\">\r\n//       <h2 className=\"text-2xl font-bold mb-4\">{isEditing ? 'Modify Event' : 'Create Event'}</h2>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//         <input type=\"text\" name=\"title\" placeholder=\"Title\" value={event.title} onChange={handleChange} className=\"w-full border p-2\" required />\r\n//         <textarea name=\"description\" placeholder=\"Description\" value={event.description} onChange={handleChange} className=\"w-full border p-2\" required></textarea>\r\n//         <input type=\"date\" name=\"date\" value={event.date} onChange={handleChange} className=\"w-full border p-2\" required />\r\n//         <input type=\"time\" name=\"time\" value={event.time} onChange={handleChange} className=\"w-full border p-2\" required />\r\n//         <input type=\"text\" name=\"type\" placeholder=\"Event Type (e.g., Webinar)\" value={event.type} onChange={handleChange} className=\"w-full border p-2\" required />\r\n//         <input type=\"text\" name=\"speaker\" placeholder=\"Speaker\" value={event.speaker} onChange={handleChange} className=\"w-full border p-2\" required />\r\n//         <input type=\"url\" name=\"link\" placeholder=\"Event Link\" value={event.link} onChange={handleChange} className=\"w-full border p-2\" required />\r\n//         <input type=\"file\" onChange={handleImageChange} accept=\"image/*\" className=\"w-full border p-2\" />\r\n//         <button type=\"submit\" className=\"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700\">\r\n//           {isEditing ? 'Update Event' : 'Create Event'}\r\n//         </button>\r\n//       </form>\r\n\r\n//       {showRegisterForm && (\r\n//         <RegisterForm\r\n//           event={event}\r\n//           onClose={() => setShowRegisterForm(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {/* ‚úÖ Download Buttons for Excel Files */}\r\n//       <div className=\"mt-6 space-y-2\">\r\n//         <a\r\n//           href=\"http://localhost:5000/api/register/download\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//           className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 inline-block w-full text-center\"\r\n//         >\r\n//           üìÅ Download Event Data (Excel)\r\n//         </a>\r\n\r\n//         <a\r\n//           href=\"http://localhost:5000/api/register/users/download\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//           className=\"bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700 inline-block w-full text-center\"\r\n//         >\r\n//           üë§ Download User Registrations (Excel)\r\n//         </a>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateEvent;\r\n\r\n\r\n\r\n// CreateEvent.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import RegisterForm from './RegisterForm'; // ‚úÖ Register form modal\r\n\r\n// const CreateEvent = () => {\r\n//   const [event, setEvent] = useState({\r\n//     title: '',\r\n//     description: '',\r\n//     date: '',\r\n//     time: '',\r\n//     type: '',\r\n//     speaker: '',\r\n//     link: '',\r\n//     image: ''\r\n//   });\r\n\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [editingEventId, setEditingEventId] = useState(null);\r\n//   const [showRegisterForm, setShowRegisterForm] = useState(false);\r\n//   const [eventsList, setEventsList] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const res = await axios.get('http://localhost:5000/api/events');\r\n//       setEventsList(res.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching events:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setEvent({ ...event, [name]: value });\r\n//   };\r\n\r\n//   const handleImageChange = (e) => {\r\n//     const file = e.target.files[0];\r\n//     const reader = new FileReader();\r\n//     reader.onloadend = () => {\r\n//       setEvent({ ...event, image: reader.result });\r\n//     };\r\n//     if (file) {\r\n//       reader.readAsDataURL(file);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n//       const url = isEditing\r\n//         ? `http://localhost:5000/api/events/${editingEventId}`\r\n//         : 'http://localhost:5000/api/events';\r\n//       const method = isEditing ? 'put' : 'post';\r\n\r\n//       const res = await axios[method](url, event, {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       });\r\n\r\n//       alert(isEditing ? 'Event updated successfully!' : 'Event created successfully!');\r\n\r\n//       setEvent({\r\n//         title: '', description: '', date: '', time: '',\r\n//         type: '', speaker: '', link: '', image: ''\r\n//       });\r\n//       setIsEditing(false);\r\n//       setEditingEventId(null);\r\n//       fetchEvents();\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       alert('Error saving event');\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (eventData) => {\r\n//     setEvent(eventData);\r\n//     setIsEditing(true);\r\n//     setEditingEventId(eventData._id);\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     if (window.confirm('Are you sure you want to delete this event?')) {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         await axios.delete(`http://localhost:5000/api/events/${id}`, {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         });\r\n//         fetchEvents();\r\n//         alert('Event deleted successfully');\r\n//       } catch (err) {\r\n//         console.error('Error deleting event:', err);\r\n//         alert('Failed to delete event');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6 max-w-xl mx-auto\">\r\n//       <h2 className=\"text-2xl font-bold mb-4\">{isEditing ? 'Modify Event' : 'Create Event'}</h2>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//         <input type=\"text\" name=\"title\" placeholder=\"Title\" value={event.title} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n//         <textarea name=\"description\" placeholder=\"Description\" value={event.description} onChange={handleChange} className=\"w-full border p-2 text-sm\" required></textarea>\r\n//         <input type=\"date\" name=\"date\" value={event.date} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n//         <input type=\"time\" name=\"time\" value={event.time} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n//         <input type=\"text\" name=\"type\" placeholder=\"Event Type (e.g., Webinar)\" value={event.type} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n//         <input type=\"text\" name=\"speaker\" placeholder=\"Speaker\" value={event.speaker} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n//         <input type=\"url\" name=\"link\" placeholder=\"Event Link\" value={event.link} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n//         <input type=\"file\" onChange={handleImageChange} accept=\"image/*\" className=\"w-full border p-2 text-sm\" />\r\n//         <div className=\"flex gap-3\">\r\n//           <button type=\"submit\" className=\"bg-blue-600 text-white text-sm py-1 px-3 rounded hover:bg-blue-700\">\r\n//             {isEditing ? 'Update' : 'Create'}\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n\r\n//       {showRegisterForm && (\r\n//         <RegisterForm\r\n//           event={event}\r\n//           onClose={() => setShowRegisterForm(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {/* ‚úÖ Event List with Delete/Edit */}\r\n//       <div className=\"mt-8\">\r\n//         <h3 className=\"text-lg font-semibold mb-2\">All Events</h3>\r\n//         {eventsList.map((evt) => (\r\n//           <div key={evt._id} className=\"border p-3 rounded mb-3 shadow-sm\">\r\n//             <p className=\"text-sm font-semibold\">{evt.title}</p>\r\n//             <p className=\"text-xs text-gray-600\">{evt.date} at {evt.time}</p>\r\n//             <div className=\"mt-2 flex gap-2\">\r\n//               <button onClick={() => handleEdit(evt)} className=\"text-sm px-2 py-1 bg-yellow-500 text-white rounded hover:bg-yellow-600\">Edit</button>\r\n//               <button onClick={() => handleDelete(evt._id)} className=\"text-sm px-2 py-1 bg-red-600 text-white rounded hover:bg-red-700\">Delete</button>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* ‚úÖ Download Buttons */}\r\n//       <div className=\"mt-6 space-y-2\">\r\n//         <a\r\n//           href=\"http://localhost:5000/api/register/download\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//           className=\"bg-green-600 text-white text-sm px-3 py-1 rounded hover:bg-green-700 inline-block w-full text-center\"\r\n//         >\r\n//           üìÅ Download Event Data (Excel)\r\n//         </a>\r\n\r\n//         <a\r\n//           href=\"http://localhost:5000/api/register/users/download\"\r\n//           target=\"_blank\"\r\n//           rel=\"noopener noreferrer\"\r\n//           className=\"bg-purple-600 text-white text-sm px-3 py-1 rounded hover:bg-purple-700 inline-block w-full text-center\"\r\n//         >\r\n//           üë§ Download User Registrations (Excel)\r\n//         </a>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateEvent;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import RegisterForm from './RegisterForm'; // ‚úÖ Register form modal\r\n\r\n// const CreateEvent = () => {\r\n//   const [event, setEvent] = useState({\r\n//     title: '',\r\n//     description: '',\r\n//     date: '',\r\n//     time: '',\r\n//     type: '',\r\n//     speaker: '',\r\n//     link: '',\r\n//     image: ''\r\n//   });\r\n\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n//   const [editingEventId, setEditingEventId] = useState(null);\r\n//   const [showRegisterForm, setShowRegisterForm] = useState(false);\r\n//   const [eventsList, setEventsList] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetchEvents();\r\n//   }, []);\r\n\r\n//   const fetchEvents = async () => {\r\n//     try {\r\n//       const res = await axios.get('http://localhost:5000/api/events');\r\n//       console.log(\"üìã All Events from DB:\", res.data);\r\n//       setEventsList(res.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching events:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setEvent({ ...event, [name]: value });\r\n//   };\r\n\r\n//   const handleImageChange = (e) => {\r\n//     const file = e.target.files[0];\r\n//     const reader = new FileReader();\r\n//     reader.onloadend = () => {\r\n//       setEvent({ ...event, image: reader.result });\r\n//     };\r\n//     if (file) {\r\n//       reader.readAsDataURL(file);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const token = localStorage.getItem('token');\r\n//       const url = isEditing\r\n//         ? `http://localhost:5000/api/events/${editingEventId}`\r\n//         : 'http://localhost:5000/api/events';\r\n//       const method = isEditing ? 'put' : 'post';\r\n\r\n//       const res = await axios[method](url, event, {\r\n//         headers: { Authorization: `Bearer ${token}` },\r\n//       });\r\n\r\n//       alert(isEditing ? 'Event updated successfully!' : 'Event created successfully!');\r\n\r\n//       setEvent({\r\n//         title: '', description: '', date: '', time: '',\r\n//         type: '', speaker: '', link: '', image: ''\r\n//       });\r\n//       setIsEditing(false);\r\n//       setEditingEventId(null);\r\n//       fetchEvents();\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       alert('Error saving event');\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (eventData) => {\r\n//     setEvent(eventData);\r\n//     setIsEditing(true);\r\n//     setEditingEventId(eventData._id);\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     console.log(\"üóëÔ∏è Trying to delete event with ID:\", id);\r\n//     if (window.confirm('Are you sure you want to delete this event?')) {\r\n//       try {\r\n//         const token = localStorage.getItem('token');\r\n//         await axios.delete(`http://localhost:5000/api/events/${id}`, {\r\n//           headers: {\r\n//             Authorization: `Bearer ${token}`,\r\n//           },\r\n//         });\r\n//         fetchEvents();\r\n//         alert('Event deleted successfully');\r\n//       } catch (err) {\r\n//         console.error('Error deleting event:', err);\r\n//         alert('Failed to delete event');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"p-6 max-w-xl mx-auto\">\r\n//       <h2 className=\"text-2xl font-bold mb-4\">{isEditing ? 'Modify Event' : 'Create Event'}</h2>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//         <input type=\"text\" name=\"title\" placeholder=\"Title\" value={event.title} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n//         <textarea name=\"description\" placeholder=\"Description\" value={event.description} onChange={handleChange} className=\"w-full border p-2 text-sm\" required></textarea>\r\n//         <input type=\"date\" name=\"date\" value={event.date} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n//         <input type=\"time\" name=\"time\" value={event.time} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n//         <input type=\"text\" name=\"type\" placeholder=\"Event Type (e.g., Webinar)\" value={event.type} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n//         <input type=\"text\" name=\"speaker\" placeholder=\"Speaker\" value={event.speaker} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n//         <input type=\"url\" name=\"link\" placeholder=\"Event Link\" value={event.link} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n//         <input type=\"file\" onChange={handleImageChange} accept=\"image/*\" className=\"w-full border p-2 text-sm\" />\r\n//         <div className=\"flex gap-3\">\r\n//           <button type=\"submit\" className=\"bg-[#4748ac] text-white text-sm py-1 px-3 rounded hover:bg-blue-700\">\r\n//             {isEditing ? 'Update' : 'Create'}\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n\r\n//       {showRegisterForm && (\r\n//         <RegisterForm\r\n//           event={event}\r\n//           onClose={() => setShowRegisterForm(false)}\r\n//         />\r\n//       )}\r\n\r\n//       {/* ‚úÖ Event List with Delete/Edit */}\r\n//       <div className=\"mt-8\">\r\n//         <h3 className=\"text-lg font-semibold mb-2\">All Events</h3>\r\n//         {eventsList.map((evt) => {\r\n//           console.log(\"üîç Event ID:\", evt._id);\r\n//           return (\r\n//             <div key={evt._id} className=\"border p-3 rounded mb-3 shadow-sm\">\r\n//               <p className=\"text-sm font-semibold\">{evt.title}</p>\r\n//               <p className=\"text-xs text-gray-600\">{evt.date} at {evt.time}</p>\r\n//               <div className=\"mt-2 flex gap-2\">\r\n//                 <button onClick={() => handleEdit(evt)} className=\"text-sm px-2 py-1 bg-[#4748ac] text-white rounded hover:bg-yellow-600\">Edit</button>\r\n//                 <button onClick={() => handleDelete(evt._id)} className=\"text-sm px-2 py-1 bg-red-600 text-white rounded hover:bg-red-700\">Delete</button>\r\n//               </div>\r\n//             </div>\r\n//           );\r\n//         })}\r\n//       </div>\r\n\r\n//       {/* ‚úÖ Download Buttons */}\r\n//       <div className=\"mt-6 flex justify-center gap-4\">\r\n//   <a\r\n//     href=\"http://localhost:5000/api/register/download\"\r\n//     target=\"_blank\"\r\n//     rel=\"noopener noreferrer\"\r\n//     className=\"bg-green-600 text-white text-sm px-2 py-3 rounded hover:bg-green-700 w-1/4 text-center no-underline\"\r\n//     style={{ textDecoration: 'none' }}\r\n//   >\r\n//     üìÅ Download Event Data (Excel)\r\n//   </a>\r\n\r\n//   <a\r\n//     href=\"http://localhost:5000/api/register/users/download\"\r\n//     target=\"_blank\"\r\n//     rel=\"noopener noreferrer\"\r\n//     className=\"bg-[#4748ac] text-white text-sm p2-3 py-3 rounded bg-[#4748ac] w-1/4 text-center no-underline\"\r\n//     style={{ textDecoration: 'none' }}\r\n//   >\r\n//     üë§ Download User Registrations (Excel)\r\n//   </a>\r\n// </div>\r\n\r\n\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CreateEvent;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport RegisterForm from './RegisterForm'; // ‚úÖ Register form modal\r\n\r\nconst CreateEvent = () => {\r\n  const [event, setEvent] = useState({\r\n    title: '',\r\n    description: '',\r\n    date: '',\r\n    time: '',\r\n    type: '',\r\n    speaker: '',\r\n    link: '',\r\n    image: ''\r\n  });\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editingEventId, setEditingEventId] = useState(null);\r\n  const [showRegisterForm, setShowRegisterForm] = useState(false);\r\n  const [eventsList, setEventsList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/events');\r\n      console.log(\"üìã All Events from DB:\", res.data);\r\n      setEventsList(res.data);\r\n    } catch (error) {\r\n      console.error('Error fetching events:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEvent({ ...event, [name]: value });\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        const img = new Image();\r\n        img.onload = () => {\r\n          const canvas = document.createElement('canvas');\r\n          const targetAspect = 16 / 9;\r\n          const currentAspect = img.width / img.height;\r\n          let drawWidth, drawHeight;\r\n\r\n          if (currentAspect > targetAspect) {\r\n            drawHeight = img.height;\r\n            drawWidth = img.height * targetAspect;\r\n          } else {\r\n            drawWidth = img.width;\r\n            drawHeight = img.width / targetAspect;\r\n          }\r\n\r\n          canvas.width = 1280;\r\n          canvas.height = 720;\r\n          const ctx = canvas.getContext('2d');\r\n          ctx.fillStyle = '#fff';\r\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n          ctx.drawImage(\r\n            img,\r\n            (img.width - drawWidth) / 2,\r\n            (img.height - drawHeight) / 2,\r\n            drawWidth,\r\n            drawHeight,\r\n            0,\r\n            0,\r\n            canvas.width,\r\n            canvas.height\r\n          );\r\n\r\n          const croppedDataUrl = canvas.toDataURL('image/jpeg');\r\n          setEvent({ ...event, image: croppedDataUrl });\r\n        };\r\n        img.src = reader.result;\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const url = isEditing\r\n        ? `http://localhost:5000/api/events/${editingEventId}`\r\n        : 'http://localhost:5000/api/events';\r\n      const method = isEditing ? 'put' : 'post';\r\n\r\n      const res = await axios[method](url, event, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      alert(isEditing ? 'Event updated successfully!' : 'Event created successfully!');\r\n\r\n      setEvent({\r\n        title: '', description: '', date: '', time: '',\r\n        type: '', speaker: '', link: '', image: ''\r\n      });\r\n      setIsEditing(false);\r\n      setEditingEventId(null);\r\n      fetchEvents();\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Error saving event');\r\n    }\r\n  };\r\n\r\n  const handleEdit = (eventData) => {\r\n    setEvent(eventData);\r\n    setIsEditing(true);\r\n    setEditingEventId(eventData._id);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    console.log(\"üóëÔ∏è Trying to delete event with ID:\", id);\r\n    if (window.confirm('Are you sure you want to delete this event?')) {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        await axios.delete(`http://localhost:5000/api/events/${id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        fetchEvents();\r\n        alert('Event deleted successfully');\r\n      } catch (err) {\r\n        console.error('Error deleting event:', err);\r\n        alert('Failed to delete event');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-xl mx-auto\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">{isEditing ? 'Modify Event' : 'Create Event'}</h2>\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <input type=\"text\" name=\"title\" placeholder=\"Title\" value={event.title} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n        <textarea name=\"description\" placeholder=\"Description\" value={event.description} onChange={handleChange} className=\"w-full border p-2 text-sm\" required></textarea>\r\n        <input type=\"date\" name=\"date\" value={event.date} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n        <input type=\"time\" name=\"time\" value={event.time} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n        <input type=\"text\" name=\"type\" placeholder=\"Event Type (e.g., Webinar)\" value={event.type} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n        <input type=\"text\" name=\"speaker\" placeholder=\"Speaker\" value={event.speaker} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n        <input type=\"url\" name=\"link\" placeholder=\"Event Link\" value={event.link} onChange={handleChange} className=\"w-full border p-2 text-sm\" required />\r\n        <input type=\"file\" onChange={handleImageChange} accept=\"image/*\" className=\"w-full border p-2 text-sm\" />\r\n        <div className=\"flex gap-3\">\r\n          <button type=\"submit\" className=\"bg-[#4748ac] text-white text-sm py-1 px-3 rounded hover:bg-blue-700\">\r\n            {isEditing ? 'Update' : 'Create'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      {showRegisterForm && (\r\n        <RegisterForm\r\n          event={event}\r\n          onClose={() => setShowRegisterForm(false)}\r\n        />\r\n      )}\r\n\r\n      <div className=\"mt-8\">\r\n        <h3 className=\"text-lg font-semibold mb-2\">All Events</h3>\r\n        {eventsList.map((evt) => {\r\n          console.log(\"üîç Event ID:\", evt._id);\r\n          return (\r\n            <div key={evt._id} className=\"border p-3 rounded mb-3 shadow-sm\">\r\n              <p className=\"text-sm font-semibold\">{evt.title}</p>\r\n              <p className=\"text-xs text-gray-600\">{evt.date} at {evt.time}</p>\r\n              <div className=\"mt-2 flex gap-2\">\r\n                <button onClick={() => handleEdit(evt)} className=\"text-sm px-2 py-1 bg-[#4748ac] text-white rounded hover:bg-yellow-600\">Edit</button>\r\n                <button onClick={() => handleDelete(evt._id)} className=\"text-sm px-2 py-1 bg-red-600 text-white rounded hover:bg-red-700\">Delete</button>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"mt-6 flex justify-center gap-4\">\r\n        <a\r\n          href=\"http://localhost:5000/api/register/download\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"bg-green-600 text-white text-sm px-2 py-3 rounded hover:bg-green-700 w-1/4 text-center no-underline\"\r\n          style={{ textDecoration: 'none' }}\r\n        >\r\n          üìÅ Download Event Data (Excel)\r\n        </a>\r\n\r\n        <a\r\n          href=\"http://localhost:5000/api/register/users/download\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"bg-[#4748ac] text-white text-sm p2-3 py-3 rounded bg-[#4748ac] w-1/4 text-center no-underline\"\r\n          style={{ textDecoration: 'none' }}\r\n        >\r\n          üë§ Download User Registrations (Excel)\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateEvent;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}