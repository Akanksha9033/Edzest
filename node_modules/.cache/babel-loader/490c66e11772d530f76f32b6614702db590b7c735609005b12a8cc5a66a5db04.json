{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\happy\\\\Downloads\\\\edzest-website-3\\\\src\\\\FlashcardApp\\\\Flashcard.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n\n// const Flashcard = ({\n//   currentCard,\n//   currentCardIndex,\n//   setCurrentCardIndex,\n//   totalCards,\n//   isFlipped,          // ✅ Controlled flip state from parent\n//   setIsFlipped,        // ✅ Flip handler from parent\n// }) => {\n//   const [flipped, setFlipped] = useState(false); // ✅ Local flip state for manual flipping\n\n//   // ✅ Sync local flipped state with the parent flip state\n//   useEffect(() => {\n//     setFlipped(isFlipped); // When isFlipped changes, update flipped state\n//   }, [isFlipped]);\n\n//   // ✅ Handle card flip when clicked\n//   const handleFlip = () => {\n//     setFlipped((prev) => !prev);      // Toggle local flip\n//     setIsFlipped((prev) => !prev);    // Sync with parent\n//   };\n\n//   // ✅ Load saved index & flip state from localStorage on initial render\n//   useEffect(() => {\n//     const savedIndex = localStorage.getItem(\"currentCardIndex\");\n//     const savedFlipped = localStorage.getItem(\"flipped\");\n\n//     const index = Number(savedIndex);\n//     if (!isNaN(index) && index >= 0 && index < totalCards) {\n//       setCurrentCardIndex(index);\n//     } else {\n//       setCurrentCardIndex(0);\n//     }\n\n//     if (savedFlipped !== null) {\n//       setFlipped(savedFlipped === \"true\");\n//       setIsFlipped(savedFlipped === \"true\"); // ✅ Sync with parent state\n//     }\n//   }, [setCurrentCardIndex, setIsFlipped, totalCards]);\n\n//   // ✅ Save the current index & flip state to localStorage whenever they change\n//   useEffect(() => {\n//     localStorage.setItem(\"currentCardIndex\", currentCardIndex.toString());\n//     localStorage.setItem(\"flipped\", flipped.toString());\n//   }, [currentCardIndex, flipped]);\n\n//   if (!currentCard) {\n//     return <div>No flashcards available. Please select a category.</div>;\n//   }\n\n//   return (\n//     <div\n//       className=\"flashcard-container d-flex justify-content-center align-items-center\"\n//       style={{\n//         width: \"100%\",\n//         padding: \"20px\",\n//       }}\n//     >\n//       <div\n//         className=\"card text-center shadow-lg rounded-4 p-3 bg-grey-500\"\n//         style={{\n//           width: \"100%\",\n//           maxWidth: \"30rem\",\n//           height: \"12rem\",\n//           cursor: \"pointer\",\n//           transition: \"transform 0.6s\",\n//           transformStyle: \"preserve-3d\",\n//           position: \"relative\",\n//           transform: flipped ? \"rotateY(180deg)\" : \"rotateY(0deg)\", // ✅ Flip effect\n//         }}\n//         onClick={handleFlip} // ✅ Trigger flip on click\n//       >\n//         {/* ✅ Front Side (Question) */}\n//         <div\n//           className=\"card-body d-flex flex-column justify-content-center align-items-center\"\n//           style={{\n//             position: \"absolute\",\n//             width: \"100%\",\n//             height: \"100%\",\n//             backfaceVisibility: \"hidden\",\n//             top: \"50%\",\n//             left: \"50%\",\n//             transform: \"translate(-50%, -50%)\",\n//           }}\n//         >\n\n//           <h3 className=\"card-text text-dark\">\n//             {currentCard.question || \"No Question Available\"}\n//           </h3>\n//         </div>\n\n//         {/* ✅ Back Side (Answer) */}\n//         <div\n//           className=\"card-body d-flex flex-column justify-content-center align-items-center rounded-4\"\n//           style={{\n//             position: \"absolute\",\n//             width: \"100%\",\n//             height: \"100%\",\n//             backfaceVisibility: \"hidden\",\n//             top: \"50%\",\n//             left: \"50%\",\n//             transform: \"translate(-50%, -50%) rotateY(180deg)\",\n//           }}\n//         >\n\n//           <p className=\"card-text text-dark\">\n//             {currentCard.answer || \"No Answer Available\"}\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Flashcard;\n\n// import React, { useState, useEffect } from \"react\";\n\n// const Flashcard = ({\n//   currentCard,\n//   currentCardIndex,\n//   setCurrentCardIndex,\n//   totalCards,\n//   isFlipped,\n//   setIsFlipped,\n// }) => {\n//   const [flipped, setFlipped] = useState(false);\n\n//   useEffect(() => {\n//     setFlipped(isFlipped);\n//   }, [isFlipped]);\n\n//   const handleFlip = () => {\n//     setFlipped((prev) => !prev);\n//     setIsFlipped((prev) => !prev);\n//   };\n\n//   useEffect(() => {\n//     const savedIndex = localStorage.getItem(\"currentCardIndex\");\n//     const savedFlipped = localStorage.getItem(\"flipped\");\n//     const index = Number(savedIndex);\n//     if (!isNaN(index) && index >= 0 && index < totalCards) {\n//       setCurrentCardIndex(index);\n//     } else {\n//       setCurrentCardIndex(0);\n//     }\n//     if (savedFlipped !== null) {\n//       setFlipped(savedFlipped === \"true\");\n//       setIsFlipped(savedFlipped === \"true\");\n//     }\n//   }, [setCurrentCardIndex, setIsFlipped, totalCards]);\n\n//   useEffect(() => {\n//     localStorage.setItem(\"currentCardIndex\", currentCardIndex.toString());\n//     localStorage.setItem(\"flipped\", flipped.toString());\n//   }, [currentCardIndex, flipped]);\n\n//   if (!currentCard) {\n//     return <div>No flashcards available. Please select a category.</div>;\n//   }\n\n//   return (\n//     <div className=\"flashcard-container d-flex justify-content-center align-items-center\" style={{ width: \"100%\", padding: \"20px\" }}>\n//       <div\n//         className=\"card text-center shadow-lg rounded-4 p-3 bg-grey-500\"\n//         style={{\n//           width: \"100%\",\n//           maxWidth: \"30rem\",\n//           height: \"12rem\",\n//           cursor: \"pointer\",\n//           transition: \"transform 0.6s\",\n//           transformStyle: \"preserve-3d\",\n//           position: \"relative\",\n//           transform: flipped ? \"rotateY(180deg)\" : \"rotateY(0deg)\",\n//         }}\n//         onClick={handleFlip}\n//       >\n//         <div\n//           className=\"card-body d-flex flex-column justify-content-center align-items-center\"\n//           style={{\n//             position: \"absolute\",\n//             width: \"100%\",\n//             height: \"100%\",\n//             backfaceVisibility: \"hidden\",\n//             top: \"50%\",\n//             left: \"50%\",\n//             transform: \"translate(-50%, -50%)\",\n//             overflow: \"hidden\",\n//             wordWrap: \"break-word\",\n//             padding: \"10px\",\n//           }}\n//         >\n//           <h3 className=\"card-text text-dark\" style={{ fontSize: \"1.2rem\", textAlign: \"center\" }}>\n//             {currentCard.question || \"No Question Available\"}\n//           </h3>\n//         </div>\n\n//         <div\n//           className=\"card-body d-flex flex-column justify-content-center align-items-center rounded-4\"\n//           style={{\n//             position: \"absolute\",\n//             width: \"100%\",\n//             height: \"100%\",\n//             backfaceVisibility: \"hidden\",\n//             top: \"50%\",\n//             left: \"50%\",\n//             transform: \"translate(-50%, -50%) rotateY(180deg)\",\n//             overflowY: \"auto\",\n//             wordWrap: \"break-word\",\n//             padding: \"10px\",\n//             textAlign: \"center\",\n//           }}\n//         >\n//           <p className=\"card-text text-dark\" style={{ fontSize: \"1rem\" }}>\n//             {currentCard.answer || \"No Answer Available\"}\n//           </p>\n//           {currentCard.example && (\n//             <p className=\"card-text text-muted\" style={{ fontSize: \"0.9rem\" }}>\n//               <strong>Example:</strong> {currentCard.example}\n//             </p>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Flashcard;\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Flashcard = ({\n  currentCard,\n  currentCardIndex,\n  setCurrentCardIndex,\n  totalCards,\n  isFlipped,\n  setIsFlipped\n}) => {\n  _s();\n  const [flipped, setFlipped] = useState(false);\n  useEffect(() => {\n    setFlipped(isFlipped);\n  }, [isFlipped]);\n  const handleFlip = () => {\n    setFlipped(prev => !prev);\n    setIsFlipped(prev => !prev);\n  };\n  useEffect(() => {\n    const savedIndex = localStorage.getItem(\"currentCardIndex\");\n    const savedFlipped = localStorage.getItem(\"flipped\");\n    const index = Number(savedIndex);\n    if (!isNaN(index) && index >= 0 && index < totalCards) {\n      setCurrentCardIndex(index);\n    } else {\n      setCurrentCardIndex(0);\n    }\n    if (savedFlipped !== null) {\n      setFlipped(savedFlipped === \"true\");\n      setIsFlipped(savedFlipped === \"true\");\n    }\n  }, [setCurrentCardIndex, setIsFlipped, totalCards]);\n  useEffect(() => {\n    localStorage.setItem(\"currentCardIndex\", currentCardIndex.toString());\n    localStorage.setItem(\"flipped\", flipped.toString());\n  }, [currentCardIndex, flipped]);\n  if (!currentCard) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No flashcards available. Please select a category.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flashcard-container d-flex justify-content-center align-items-center\",\n    style: {\n      width: \"100%\",\n      padding: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-center shadow-lg rounded-4 p-3 bg-grey-500\",\n      style: {\n        width: \"95%\",\n        // ✅ Slightly wider in mobile\n        maxWidth: \"32rem\",\n        // ✅ Slightly increased max width\n        height: \"auto\",\n        minHeight: \"12rem\",\n        cursor: \"pointer\",\n        transition: \"transform 0.6s\",\n        transformStyle: \"preserve-3d\",\n        position: \"relative\",\n        transform: flipped ? \"rotateY(180deg)\" : \"rotateY(0deg)\"\n      },\n      onClick: handleFlip,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body d-flex flex-column justify-content-center align-items-center\",\n        style: {\n          position: \"absolute\",\n          width: \"100%\",\n          minHeight: \"12rem\",\n          height: \"100%\",\n          backfaceVisibility: \"hidden\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          overflow: \"hidden\",\n          wordWrap: \"break-word\",\n          padding: \"10px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-text text-dark\",\n          style: {\n            fontSize: \"1.1rem\",\n            textAlign: \"center\",\n            wordBreak: \"break-word\",\n            padding: \"5px\"\n          },\n          children: currentCard.question || \"No Question Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body d-flex flex-column align-items-center rounded-4\",\n        style: {\n          position: \"absolute\",\n          width: \"100%\",\n          minHeight: \"12rem\",\n          height: \"100%\",\n          backfaceVisibility: \"hidden\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%) rotateY(180deg)\",\n          overflowY: \"auto\",\n          wordWrap: \"break-word\",\n          padding: \"10px\",\n          textAlign: \"center\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-start\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text text-dark\",\n          style: {\n            fontSize: \"0.95rem\",\n            padding: \"5px\",\n            marginTop: \"5px\"\n          },\n          children: currentCard.answer || \"No Answer Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 7\n        }, this), currentCard.example && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text text-muted\",\n          style: {\n            fontSize: \"0.85rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Example:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 11\n          }, this), \" \", currentCard.example]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(Flashcard, \"XsYe6xSw9JempgHLfhYfsPVXIRU=\");\n_c = Flashcard;\nexport default Flashcard;\nvar _c;\n$RefreshReg$(_c, \"Flashcard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Flashcard","currentCard","currentCardIndex","setCurrentCardIndex","totalCards","isFlipped","setIsFlipped","_s","flipped","setFlipped","handleFlip","prev","savedIndex","localStorage","getItem","savedFlipped","index","Number","isNaN","setItem","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","width","padding","maxWidth","height","minHeight","cursor","transition","transformStyle","position","transform","onClick","backfaceVisibility","top","left","overflow","wordWrap","display","flexDirection","justifyContent","fontSize","textAlign","wordBreak","question","overflowY","marginTop","answer","example","_c","$RefreshReg$"],"sources":["C:/Users/happy/Downloads/edzest-website-3/src/FlashcardApp/Flashcard.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n\r\n// const Flashcard = ({\r\n//   currentCard,\r\n//   currentCardIndex,\r\n//   setCurrentCardIndex,\r\n//   totalCards,\r\n//   isFlipped,          // ✅ Controlled flip state from parent\r\n//   setIsFlipped,        // ✅ Flip handler from parent\r\n// }) => {\r\n//   const [flipped, setFlipped] = useState(false); // ✅ Local flip state for manual flipping\r\n\r\n//   // ✅ Sync local flipped state with the parent flip state\r\n//   useEffect(() => {\r\n//     setFlipped(isFlipped); // When isFlipped changes, update flipped state\r\n//   }, [isFlipped]);\r\n\r\n//   // ✅ Handle card flip when clicked\r\n//   const handleFlip = () => {\r\n//     setFlipped((prev) => !prev);      // Toggle local flip\r\n//     setIsFlipped((prev) => !prev);    // Sync with parent\r\n//   };\r\n\r\n//   // ✅ Load saved index & flip state from localStorage on initial render\r\n//   useEffect(() => {\r\n//     const savedIndex = localStorage.getItem(\"currentCardIndex\");\r\n//     const savedFlipped = localStorage.getItem(\"flipped\");\r\n\r\n//     const index = Number(savedIndex);\r\n//     if (!isNaN(index) && index >= 0 && index < totalCards) {\r\n//       setCurrentCardIndex(index);\r\n//     } else {\r\n//       setCurrentCardIndex(0);\r\n//     }\r\n\r\n//     if (savedFlipped !== null) {\r\n//       setFlipped(savedFlipped === \"true\");\r\n//       setIsFlipped(savedFlipped === \"true\"); // ✅ Sync with parent state\r\n//     }\r\n//   }, [setCurrentCardIndex, setIsFlipped, totalCards]);\r\n\r\n//   // ✅ Save the current index & flip state to localStorage whenever they change\r\n//   useEffect(() => {\r\n//     localStorage.setItem(\"currentCardIndex\", currentCardIndex.toString());\r\n//     localStorage.setItem(\"flipped\", flipped.toString());\r\n//   }, [currentCardIndex, flipped]);\r\n\r\n//   if (!currentCard) {\r\n//     return <div>No flashcards available. Please select a category.</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div\r\n//       className=\"flashcard-container d-flex justify-content-center align-items-center\"\r\n//       style={{\r\n//         width: \"100%\",\r\n//         padding: \"20px\",\r\n//       }}\r\n//     >\r\n//       <div\r\n//         className=\"card text-center shadow-lg rounded-4 p-3 bg-grey-500\"\r\n//         style={{\r\n//           width: \"100%\",\r\n//           maxWidth: \"30rem\",\r\n//           height: \"12rem\",\r\n//           cursor: \"pointer\",\r\n//           transition: \"transform 0.6s\",\r\n//           transformStyle: \"preserve-3d\",\r\n//           position: \"relative\",\r\n//           transform: flipped ? \"rotateY(180deg)\" : \"rotateY(0deg)\", // ✅ Flip effect\r\n//         }}\r\n//         onClick={handleFlip} // ✅ Trigger flip on click\r\n//       >\r\n//         {/* ✅ Front Side (Question) */}\r\n//         <div\r\n//           className=\"card-body d-flex flex-column justify-content-center align-items-center\"\r\n//           style={{\r\n//             position: \"absolute\",\r\n//             width: \"100%\",\r\n//             height: \"100%\",\r\n//             backfaceVisibility: \"hidden\",\r\n//             top: \"50%\",\r\n//             left: \"50%\",\r\n//             transform: \"translate(-50%, -50%)\",\r\n//           }}\r\n//         >\r\n\r\n//           <h3 className=\"card-text text-dark\">\r\n//             {currentCard.question || \"No Question Available\"}\r\n//           </h3>\r\n//         </div>\r\n\r\n//         {/* ✅ Back Side (Answer) */}\r\n//         <div\r\n//           className=\"card-body d-flex flex-column justify-content-center align-items-center rounded-4\"\r\n//           style={{\r\n//             position: \"absolute\",\r\n//             width: \"100%\",\r\n//             height: \"100%\",\r\n//             backfaceVisibility: \"hidden\",\r\n//             top: \"50%\",\r\n//             left: \"50%\",\r\n//             transform: \"translate(-50%, -50%) rotateY(180deg)\",\r\n//           }}\r\n//         >\r\n\r\n//           <p className=\"card-text text-dark\">\r\n//             {currentCard.answer || \"No Answer Available\"}\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Flashcard;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n\r\n// const Flashcard = ({\r\n//   currentCard,\r\n//   currentCardIndex,\r\n//   setCurrentCardIndex,\r\n//   totalCards,\r\n//   isFlipped,\r\n//   setIsFlipped,\r\n// }) => {\r\n//   const [flipped, setFlipped] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     setFlipped(isFlipped);\r\n//   }, [isFlipped]);\r\n\r\n//   const handleFlip = () => {\r\n//     setFlipped((prev) => !prev);\r\n//     setIsFlipped((prev) => !prev);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     const savedIndex = localStorage.getItem(\"currentCardIndex\");\r\n//     const savedFlipped = localStorage.getItem(\"flipped\");\r\n//     const index = Number(savedIndex);\r\n//     if (!isNaN(index) && index >= 0 && index < totalCards) {\r\n//       setCurrentCardIndex(index);\r\n//     } else {\r\n//       setCurrentCardIndex(0);\r\n//     }\r\n//     if (savedFlipped !== null) {\r\n//       setFlipped(savedFlipped === \"true\");\r\n//       setIsFlipped(savedFlipped === \"true\");\r\n//     }\r\n//   }, [setCurrentCardIndex, setIsFlipped, totalCards]);\r\n\r\n//   useEffect(() => {\r\n//     localStorage.setItem(\"currentCardIndex\", currentCardIndex.toString());\r\n//     localStorage.setItem(\"flipped\", flipped.toString());\r\n//   }, [currentCardIndex, flipped]);\r\n\r\n//   if (!currentCard) {\r\n//     return <div>No flashcards available. Please select a category.</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"flashcard-container d-flex justify-content-center align-items-center\" style={{ width: \"100%\", padding: \"20px\" }}>\r\n//       <div\r\n//         className=\"card text-center shadow-lg rounded-4 p-3 bg-grey-500\"\r\n//         style={{\r\n//           width: \"100%\",\r\n//           maxWidth: \"30rem\",\r\n//           height: \"12rem\",\r\n//           cursor: \"pointer\",\r\n//           transition: \"transform 0.6s\",\r\n//           transformStyle: \"preserve-3d\",\r\n//           position: \"relative\",\r\n//           transform: flipped ? \"rotateY(180deg)\" : \"rotateY(0deg)\",\r\n//         }}\r\n//         onClick={handleFlip}\r\n//       >\r\n//         <div\r\n//           className=\"card-body d-flex flex-column justify-content-center align-items-center\"\r\n//           style={{\r\n//             position: \"absolute\",\r\n//             width: \"100%\",\r\n//             height: \"100%\",\r\n//             backfaceVisibility: \"hidden\",\r\n//             top: \"50%\",\r\n//             left: \"50%\",\r\n//             transform: \"translate(-50%, -50%)\",\r\n//             overflow: \"hidden\",\r\n//             wordWrap: \"break-word\",\r\n//             padding: \"10px\",\r\n//           }}\r\n//         >\r\n//           <h3 className=\"card-text text-dark\" style={{ fontSize: \"1.2rem\", textAlign: \"center\" }}>\r\n//             {currentCard.question || \"No Question Available\"}\r\n//           </h3>\r\n//         </div>\r\n\r\n//         <div\r\n//           className=\"card-body d-flex flex-column justify-content-center align-items-center rounded-4\"\r\n//           style={{\r\n//             position: \"absolute\",\r\n//             width: \"100%\",\r\n//             height: \"100%\",\r\n//             backfaceVisibility: \"hidden\",\r\n//             top: \"50%\",\r\n//             left: \"50%\",\r\n//             transform: \"translate(-50%, -50%) rotateY(180deg)\",\r\n//             overflowY: \"auto\",\r\n//             wordWrap: \"break-word\",\r\n//             padding: \"10px\",\r\n//             textAlign: \"center\",\r\n//           }}\r\n//         >\r\n//           <p className=\"card-text text-dark\" style={{ fontSize: \"1rem\" }}>\r\n//             {currentCard.answer || \"No Answer Available\"}\r\n//           </p>\r\n//           {currentCard.example && (\r\n//             <p className=\"card-text text-muted\" style={{ fontSize: \"0.9rem\" }}>\r\n//               <strong>Example:</strong> {currentCard.example}\r\n//             </p>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Flashcard;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Flashcard = ({\r\n  currentCard,\r\n  currentCardIndex,\r\n  setCurrentCardIndex,\r\n  totalCards,\r\n  isFlipped,\r\n  setIsFlipped,\r\n}) => {\r\n  const [flipped, setFlipped] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setFlipped(isFlipped);\r\n  }, [isFlipped]);\r\n\r\n  const handleFlip = () => {\r\n    setFlipped((prev) => !prev);\r\n    setIsFlipped((prev) => !prev);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const savedIndex = localStorage.getItem(\"currentCardIndex\");\r\n    const savedFlipped = localStorage.getItem(\"flipped\");\r\n    const index = Number(savedIndex);\r\n    if (!isNaN(index) && index >= 0 && index < totalCards) {\r\n      setCurrentCardIndex(index);\r\n    } else {\r\n      setCurrentCardIndex(0);\r\n    }\r\n    if (savedFlipped !== null) {\r\n      setFlipped(savedFlipped === \"true\");\r\n      setIsFlipped(savedFlipped === \"true\");\r\n    }\r\n  }, [setCurrentCardIndex, setIsFlipped, totalCards]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"currentCardIndex\", currentCardIndex.toString());\r\n    localStorage.setItem(\"flipped\", flipped.toString());\r\n  }, [currentCardIndex, flipped]);\r\n\r\n  if (!currentCard) {\r\n    return <div>No flashcards available. Please select a category.</div>;\r\n  }\r\n\r\n  return (\r\n    <div\r\n  className=\"flashcard-container d-flex justify-content-center align-items-center\"\r\n  style={{\r\n    width: \"100%\",\r\n    padding: \"20px\",\r\n  }}\r\n>\r\n  <div\r\n    className=\"card text-center shadow-lg rounded-4 p-3 bg-grey-500\"\r\n    style={{\r\n      width: \"95%\", // ✅ Slightly wider in mobile\r\n      maxWidth: \"32rem\", // ✅ Slightly increased max width\r\n      height: \"auto\",\r\n      minHeight: \"12rem\",\r\n      cursor: \"pointer\",\r\n      transition: \"transform 0.6s\",\r\n      transformStyle: \"preserve-3d\",\r\n      position: \"relative\",\r\n      transform: flipped ? \"rotateY(180deg)\" : \"rotateY(0deg)\",\r\n    }}\r\n    onClick={handleFlip}\r\n  >\r\n    {/* Front Side */}\r\n    <div\r\n      className=\"card-body d-flex flex-column justify-content-center align-items-center\"\r\n      style={{\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        minHeight: \"12rem\",\r\n        height: \"100%\",\r\n        backfaceVisibility: \"hidden\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        overflow: \"hidden\",\r\n        wordWrap: \"break-word\",\r\n        padding: \"10px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <h3\r\n        className=\"card-text text-dark\"\r\n        style={{\r\n          fontSize: \"1.1rem\",\r\n          textAlign: \"center\",\r\n          wordBreak: \"break-word\",\r\n          padding: \"5px\",\r\n        }}\r\n      >\r\n        {currentCard.question || \"No Question Available\"}\r\n      </h3>\r\n    </div>\r\n\r\n    {/* Back Side */}\r\n    <div\r\n      className=\"card-body d-flex flex-column align-items-center rounded-4\"\r\n      style={{\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        minHeight: \"12rem\",\r\n        height: \"100%\",\r\n        backfaceVisibility: \"hidden\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%) rotateY(180deg)\",\r\n        overflowY: \"auto\",\r\n        wordWrap: \"break-word\",\r\n        padding: \"10px\",\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"flex-start\",\r\n      }}\r\n    >\r\n      <p\r\n        className=\"card-text text-dark\"\r\n        style={{\r\n          fontSize: \"0.95rem\",\r\n          padding: \"5px\",\r\n          marginTop: \"5px\",\r\n        }}\r\n      >\r\n        {currentCard.answer || \"No Answer Available\"}\r\n      </p>\r\n      {currentCard.example && (\r\n        <p className=\"card-text text-muted\" style={{ fontSize: \"0.85rem\" }}>\r\n          <strong>Example:</strong> {currentCard.example}\r\n        </p>\r\n      )}\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Flashcard;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAC;EACjBC,WAAW;EACXC,gBAAgB;EAChBC,mBAAmB;EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}