{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\happy\\\\Downloads\\\\edzest-website-3\\\\src\\\\components\\\\ProjectDocs\\\\ProjectNavbar.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Navbar, Container, Button } from \"react-bootstrap\";\nimport useWindowSize from \"./useWindowSize\"; // Custom hook to detect screen size\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectNavBar = ({\n  toggleSidebar\n}) => {\n  _s();\n  const screenWidth = useWindowSize();\n  const isMobile = screenWidth < 992;\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    bg: \"dark\",\n    variant: \"dark\",\n    expand: \"lg\",\n    className: \"px-3\",\n    children: [isMobile && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline-light\",\n      onClick: toggleSidebar,\n      className: \"me-3\",\n      children: \"\\u2630\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n      href: \"/docs/:chapterId/:subChapterId\",\n      children: \"PM Docs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectNavBar, \"uJPf98EOko+mtUPmnLOK4WqVTo8=\", false, function () {\n  return [useWindowSize];\n});\n_c = ProjectNavBar;\nexport default ProjectNavBar;\nvar _c;\n$RefreshReg$(_c, \"ProjectNavBar\");","map":{"version":3,"names":["React","Navbar","Container","Button","useWindowSize","jsxDEV","_jsxDEV","ProjectNavBar","toggleSidebar","_s","screenWidth","isMobile","bg","variant","expand","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Brand","href","_c","$RefreshReg$"],"sources":["C:/Users/happy/Downloads/edzest-website-3/src/components/ProjectDocs/ProjectNavbar.js"],"sourcesContent":["import React from \"react\";\r\nimport { Navbar, Container, Button } from \"react-bootstrap\";\r\nimport useWindowSize from \"./useWindowSize\"; // Custom hook to detect screen size\r\n\r\nconst ProjectNavBar = ({ toggleSidebar }) => {\r\n  const screenWidth = useWindowSize();\r\n  const isMobile = screenWidth < 992;\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"px-3\">\r\n      {isMobile && (\r\n        <Button variant=\"outline-light\" onClick={toggleSidebar} className=\"me-3\">\r\n          â˜°\r\n        </Button>\r\n      )}\r\n      <Navbar.Brand href=\"/docs/:chapterId/:subChapterId\">PM Docs</Navbar.Brand>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default ProjectNavBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,SAAS,EAAEC,MAAM,QAAQ,iBAAiB;AAC3D,OAAOC,aAAa,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAMC,WAAW,GAAGN,aAAa,CAAC,CAAC;EACnC,MAAMO,QAAQ,GAAGD,WAAW,GAAG,GAAG;EAElC,oBACEJ,OAAA,CAACL,MAAM;IAACW,EAAE,EAAC,MAAM;IAACC,OAAO,EAAC,MAAM;IAACC,MAAM,EAAC,IAAI;IAACC,SAAS,EAAC,MAAM;IAAAC,QAAA,GAC1DL,QAAQ,iBACPL,OAAA,CAACH,MAAM;MAACU,OAAO,EAAC,eAAe;MAACI,OAAO,EAAET,aAAc;MAACO,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAEzE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT,eACDf,OAAA,CAACL,MAAM,CAACqB,KAAK;MAACC,IAAI,EAAC,gCAAgC;MAAAP,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEb,CAAC;AAACZ,EAAA,CAdIF,aAAa;EAAA,QACGH,aAAa;AAAA;AAAAoB,EAAA,GAD7BjB,aAAa;AAgBnB,eAAeA,aAAa;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}