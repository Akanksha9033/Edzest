{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\happy\\\\Downloads\\\\edzest-website-3\\\\src\\\\components\\\\ProjectDocs\\\\pages\\\\Docs.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useParams, useNavigate } from \"react-router-dom\";\n// import { Container, Row, Col } from \"react-bootstrap\";\n// import ProjectNavBar from \"../ProjectNavbar\";\n// import ProjectSidebar from \"../ProjectSidebar\";\n// import Content from \"./Content\";\n// import useWindowSize from \"../useWindowSize\";\n\n// // Function to dynamically import JSON data\n// const loadContentData = async () => {\n//   const files = [\n//     \"Chapter1.js\",\n//     \"Chapter2.js\",\n//     \"Chapter3.js\",\n//     \"Chapter4.js\",\n//     \"Chapter5.js\",\n//     \"Chapter6.js\",\n//     \"Chapter7.js\",\n//     \"Chapter8.js\",\n//     \"Chapter9.js\",\n//     \"Chapter10.js\",\n//   ];\n\n//   const allData = await Promise.all(\n//     files.map((file) =>\n//       import(`../data/${file}`).then((module) => module.default)\n//     )\n//   );\n\n//   return allData.flat(); // Combine all JSON file contents\n// };\n\n// const Docs = () => {\n//   const { chapterId, sectionId: rawSectionId } = useParams();\n//   const sectionId = rawSectionId?.toLowerCase(); // Ensure case-insensitive match\n\n//   const navigate = useNavigate();\n//   const [showSidebar, setShowSidebar] = useState(false);\n//   const screenWidth = useWindowSize();\n//   const isMobile = screenWidth < 992;\n\n//   const [contentData, setContentData] = useState([]);\n//   const [selectedChapter, setSelectedChapter] = useState(null);\n//   const [selectedSection, setSelectedSection] = useState(null);\n\n//   useEffect(() => {\n//     console.log(\"🔹 Current URL Params:\", { chapterId, sectionId }); // ✅ Debugging Log\n\n//     loadContentData()\n//       .then((data) => {\n//         console.log(\"📜 Loaded Data:\", data); // ✅ Debugging Log\n\n//         setContentData(data);\n\n//         // Find the chapter by ID\n//         const chapter = data.find((ch) => ch.id.toString().toLowerCase() === chapterId.toLowerCase());\n//         console.log(\"📖 Matched Chapter:\", chapter); // ✅ Debugging Log\n\n//         setSelectedChapter(chapter || null);\n\n//         if (chapter && sectionId) {\n//           // Ensure section ID comparison is case-insensitive and trimmed\n//           const matchedSection = chapter.sections.find(\n//             (sec) => sec.id.toLowerCase().trim() === sectionId.toLowerCase().trim()\n//           );\n\n//           console.log(\"📑 Matched Section:\", matchedSection); // ✅ Debugging Log\n//           setSelectedSection(matchedSection || null);\n\n//           if (matchedSection) {\n//             // 🔥 **Scroll to the section content**\n//             setTimeout(() => {\n//               const sectionElement = document.getElementById(matchedSection.id);\n//               if (sectionElement) {\n//                 console.log(\"🎯 Scrolling to Section:\", matchedSection.id);\n//                 sectionElement.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n//               } else {\n//                 console.warn(\"⚠️ Section element not found in DOM:\", matchedSection.id);\n//               }\n//             }, 200);\n//           }\n//         } else {\n//           setSelectedSection(null);\n//         }\n//       })\n//       .catch((error) => {\n//         console.error(\"❌ Error loading content data:\", error);\n//       });\n//   }, [chapterId, sectionId]);\n\n//   const toggleSidebar = () => setShowSidebar(!showSidebar);\n\n//   const selectChapter = (chapterId) => {\n//     const chapter = contentData.find((ch) => ch.id.toString() === chapterId);\n//     setSelectedChapter(chapter);\n//     setSelectedSection(null);\n//     navigate(`/docs/${chapterId}`);\n//     setShowSidebar(false);\n//   };\n\n//   return (\n//     <div>\n//       <ProjectNavBar toggleSidebar={toggleSidebar} />\n//       <Container fluid>\n//         <Row className=\"vh-100\">\n//           {/* Sidebar */}\n//           <ProjectSidebar\n//             show={showSidebar}\n//             handleClose={toggleSidebar}\n//             contentData={contentData}\n//             onSelectChapter={selectChapter}\n//             onSelectSection={setSelectedSection} // Pass this prop\n//           />\n\n//           {/* Main Content */}\n//           <Col lg={9} md={8} className=\"p-4 d-flex flex-column\">\n//             <Content\n//               chapter={selectedChapter}\n//               selectedSection={selectedSection}\n//               onSelectSection={setSelectedSection}\n//             />\n//           </Col>\n//         </Row>\n//       </Container>\n//     </div>\n//   );\n// };\n\n// export default Docs;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Content from \"./Content\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loadContentData = async () => {\n  const files = [\"Chapter1.js\", \"Chapter2.js\", \"Chapter3.js\", \"Chapter4.js\", \"Chapter5.js\", \"Chapter6.js\", \"Chapter7.js\", \"Chapter8.js\", \"Chapter9.js\", \"Chapter10.js\"];\n  try {\n    const allData = await Promise.all(files.map(file => import(`../data/${file}`).then(module => module.default)));\n    return allData.flat();\n  } catch (error) {\n    console.error(\"❌ Error loading content:\", error);\n    return [];\n  }\n};\nconst Docs = () => {\n  _s();\n  const {\n    chapterId,\n    subChapterId,\n    sectionId\n  } = useParams();\n  const [contentData, setContentData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    loadContentData().then(data => {\n      setContentData(data || []);\n      setLoading(false);\n    }).catch(error => console.error(\"❌ Error loading content data:\", error));\n  }, []);\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 20\n  }, this) : /*#__PURE__*/_jsxDEV(Content, {\n    contentData: contentData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 44\n  }, this);\n};\n_s(Docs, \"RKHQGv9PJixXSUxyopndpaAyZvU=\", false, function () {\n  return [useParams];\n});\n_c = Docs;\nexport default Docs;\nvar _c;\n$RefreshReg$(_c, \"Docs\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Content","jsxDEV","_jsxDEV","loadContentData","files","allData","Promise","all","map","file","then","module","default","flat","error","console","Docs","_s","chapterId","subChapterId","sectionId","contentData","setContentData","loading","setLoading","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/happy/Downloads/edzest-website-3/src/components/ProjectDocs/pages/Docs.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useParams, useNavigate } from \"react-router-dom\";\r\n// import { Container, Row, Col } from \"react-bootstrap\";\r\n// import ProjectNavBar from \"../ProjectNavbar\";\r\n// import ProjectSidebar from \"../ProjectSidebar\";\r\n// import Content from \"./Content\";\r\n// import useWindowSize from \"../useWindowSize\";\r\n\r\n// // Function to dynamically import JSON data\r\n// const loadContentData = async () => {\r\n//   const files = [\r\n//     \"Chapter1.js\",\r\n//     \"Chapter2.js\",\r\n//     \"Chapter3.js\",\r\n//     \"Chapter4.js\",\r\n//     \"Chapter5.js\",\r\n//     \"Chapter6.js\",\r\n//     \"Chapter7.js\",\r\n//     \"Chapter8.js\",\r\n//     \"Chapter9.js\",\r\n//     \"Chapter10.js\",\r\n//   ];\r\n\r\n//   const allData = await Promise.all(\r\n//     files.map((file) =>\r\n//       import(`../data/${file}`).then((module) => module.default)\r\n//     )\r\n//   );\r\n\r\n//   return allData.flat(); // Combine all JSON file contents\r\n// };\r\n\r\n// const Docs = () => {\r\n//   const { chapterId, sectionId: rawSectionId } = useParams();\r\n//   const sectionId = rawSectionId?.toLowerCase(); // Ensure case-insensitive match\r\n  \r\n//   const navigate = useNavigate();\r\n//   const [showSidebar, setShowSidebar] = useState(false);\r\n//   const screenWidth = useWindowSize();\r\n//   const isMobile = screenWidth < 992;\r\n\r\n//   const [contentData, setContentData] = useState([]);\r\n//   const [selectedChapter, setSelectedChapter] = useState(null);\r\n//   const [selectedSection, setSelectedSection] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     console.log(\"🔹 Current URL Params:\", { chapterId, sectionId }); // ✅ Debugging Log\r\n  \r\n//     loadContentData()\r\n//       .then((data) => {\r\n//         console.log(\"📜 Loaded Data:\", data); // ✅ Debugging Log\r\n  \r\n//         setContentData(data);\r\n  \r\n//         // Find the chapter by ID\r\n//         const chapter = data.find((ch) => ch.id.toString().toLowerCase() === chapterId.toLowerCase());\r\n//         console.log(\"📖 Matched Chapter:\", chapter); // ✅ Debugging Log\r\n  \r\n//         setSelectedChapter(chapter || null);\r\n  \r\n//         if (chapter && sectionId) {\r\n//           // Ensure section ID comparison is case-insensitive and trimmed\r\n//           const matchedSection = chapter.sections.find(\r\n//             (sec) => sec.id.toLowerCase().trim() === sectionId.toLowerCase().trim()\r\n//           );\r\n  \r\n//           console.log(\"📑 Matched Section:\", matchedSection); // ✅ Debugging Log\r\n//           setSelectedSection(matchedSection || null);\r\n  \r\n//           if (matchedSection) {\r\n//             // 🔥 **Scroll to the section content**\r\n//             setTimeout(() => {\r\n//               const sectionElement = document.getElementById(matchedSection.id);\r\n//               if (sectionElement) {\r\n//                 console.log(\"🎯 Scrolling to Section:\", matchedSection.id);\r\n//                 sectionElement.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n//               } else {\r\n//                 console.warn(\"⚠️ Section element not found in DOM:\", matchedSection.id);\r\n//               }\r\n//             }, 200);\r\n//           }\r\n//         } else {\r\n//           setSelectedSection(null);\r\n//         }\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"❌ Error loading content data:\", error);\r\n//       });\r\n//   }, [chapterId, sectionId]);\r\n  \r\n  \r\n  \r\n  \r\n  \r\n\r\n//   const toggleSidebar = () => setShowSidebar(!showSidebar);\r\n\r\n//   const selectChapter = (chapterId) => {\r\n//     const chapter = contentData.find((ch) => ch.id.toString() === chapterId);\r\n//     setSelectedChapter(chapter);\r\n//     setSelectedSection(null);\r\n//     navigate(`/docs/${chapterId}`);\r\n//     setShowSidebar(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <ProjectNavBar toggleSidebar={toggleSidebar} />\r\n//       <Container fluid>\r\n//         <Row className=\"vh-100\">\r\n//           {/* Sidebar */}\r\n//           <ProjectSidebar\r\n//             show={showSidebar}\r\n//             handleClose={toggleSidebar}\r\n//             contentData={contentData}\r\n//             onSelectChapter={selectChapter}\r\n//             onSelectSection={setSelectedSection} // Pass this prop\r\n//           />\r\n\r\n//           {/* Main Content */}\r\n//           <Col lg={9} md={8} className=\"p-4 d-flex flex-column\">\r\n//             <Content\r\n//               chapter={selectedChapter}\r\n//               selectedSection={selectedSection}\r\n//               onSelectSection={setSelectedSection}\r\n//             />\r\n//           </Col>\r\n//         </Row>\r\n//       </Container>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Docs;\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Content from \"./Content\";\r\n\r\nconst loadContentData = async () => {\r\n  const files = [\r\n    \"Chapter1.js\", \"Chapter2.js\", \"Chapter3.js\", \"Chapter4.js\", \"Chapter5.js\",\r\n    \"Chapter6.js\", \"Chapter7.js\", \"Chapter8.js\", \"Chapter9.js\", \"Chapter10.js\",\r\n  ];\r\n\r\n  try {\r\n    const allData = await Promise.all(\r\n      files.map((file) => import(`../data/${file}`).then((module) => module.default))\r\n    );\r\n    return allData.flat();\r\n  } catch (error) {\r\n    console.error(\"❌ Error loading content:\", error);\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Docs = () => {\r\n  const { chapterId, subChapterId, sectionId } = useParams();\r\n  const [contentData, setContentData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    loadContentData().then((data) => {\r\n      setContentData(data || []);\r\n      setLoading(false);\r\n    }).catch((error) => console.error(\"❌ Error loading content data:\", error));\r\n  }, []);\r\n\r\n  return loading ? <div>Loading...</div> : <Content contentData={contentData} />;\r\n};\r\n\r\nexport default Docs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}