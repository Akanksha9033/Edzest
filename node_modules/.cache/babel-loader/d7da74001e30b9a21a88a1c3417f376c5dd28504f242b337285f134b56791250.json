{"ast":null,"code":"const agileData = [{\n  category: \"Agile Mindset\",\n  question: \"Agile Mindset\",\n  answer: \"A way of thinking that embraces adaptability, collaboration, customer-centricity, and continuous improvement.\",\n  example: \"A project team embraces change by adjusting priorities based on user feedback rather than rigidly sticking to the original plan.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Agile Manifesto\",\n  answer: \"A declaration of four values and twelve principles that guide Agile development and project management.\",\n  example: \"A software team prioritizes working software over comprehensive documentation, aligning with Agile values.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Customer-Centric Approach\",\n  answer: \"Agile teams prioritize customer feedback and value delivery over rigid plans.\",\n  example: \"A team launches an MVP of an online course platform and refines features based on user feedback.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Servant Leadership\",\n  answer: \"A leadership approach where the leader supports and empowers the team instead of directing them.\",\n  example: \"A Scrum Master removes obstacles preventing the team from completing their sprint goals.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Incremental Development\",\n  answer: \"Small, functional parts of the project are delivered continuously.\",\n  example: \"A learning platform first launches with basic courses, then expands with more features in later iterations.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Iterative Development\",\n  answer: \"Repetitive cycles of improvement based on feedback.\",\n  example: \"A learning platform launches the course after multiple corrections on the entire course.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Fail Fast, Learn Fast\",\n  answer: \"Encouraging experimentation and learning from failures quickly to make improvements.\",\n  example: \"A startup tests multiple LMS pricing models and quickly pivots based on user response.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Self-Organizing Teams\",\n  answer: \"Teams that make their own decisions and manage work without micromanagement.\",\n  example: \"A development team chooses its own backlog priorities and assigns tasks collaboratively.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Continuous Improvement (Kaizen)\",\n  answer: \"A philosophy of ongoing improvement through small, regular changes.\",\n  example: \"A team conducts retrospective meetings to identify process inefficiencies and improve workflow.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Adaptability in Agile\",\n  answer: \"The ability to respond quickly to changing requirements and external factors.\",\n  example: \"A team adjusts its LMS development roadmap when new regulations require compliance updates.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Cross-Functional Teams\",\n  answer: \"Agile teams consist of members with diverse skills who work together towards a shared goal.\",\n  example: \"A Scrum team includes developers, testers, designers, and business analysts working collaboratively.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Empirical Process Control\",\n  answer: \"Decision-making based on observation, experimentation, and adaptation rather than rigid predictions.\",\n  example: \"A team adjusts sprint priorities after reviewing real user engagement metrics.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Working Software Over Documentation\",\n  answer: \"Agile prioritizes delivering functional products over extensive documentation.\",\n  example: \"A startup focuses on releasing an LMS prototype rather than spending months writing detailed specifications.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Minimal Viable Product (MVP) Approach\",\n  answer: \"Delivering the simplest version of a product that provides value, allowing for testing and feedback.\",\n  example: \"A project team launches an online quiz platform with just one subject before expanding to multiple topics.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Agile Mindset in Leadership\",\n  answer: \"Leaders embrace collaboration, transparency, empowerment, and iterative thinking.\",\n  example: \"A project manager removes roadblocks for the team instead of enforcing rigid deadlines.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Psychological Safety in Agile Teams\",\n  answer: \"A team environment where members feel safe to take risks, ask questions, and share ideas.\",\n  example: \"A team encourages open discussions without fear of blame when identifying process inefficiencies.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Value-Driven Development\",\n  answer: \"Agile teams prioritize work that delivers the highest business value first.\",\n  example: \"A team focuses on building the user authentication system before adding minor UI enhancements.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Agile Contracts\",\n  answer: \"Contracts that allow flexibility in scope and requirements instead of rigid, fixed agreements.\",\n  example: \"A software vendor uses a time-and-materials contract instead of a fixed-price contract for Agile projects.\"\n}, {\n  category: \"Agile Mindset\",\n  question: \"Measuring Success in Agile\",\n  answer: \"Success is measured by value delivered, customer satisfaction, and team adaptability rather than following strict plans.\",\n  example: \"A project is considered successful when users actively engage with the new LMS platform and provide positive feedback.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Agile Methodologies\",\n  answer: \"A set of frameworks that follow Agile principles, focusing on iterative development, collaboration, and adaptability.\",\n  example: \"A software development team uses Scrum to break work into sprints and deliver updates every two weeks.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Scrum\",\n  answer: \"An Agile framework that organizes work into short iterations called sprints, with defined roles and ceremonies.\",\n  example: \"A development team delivers an MVP of an LMS after completing multiple Scrum sprints.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Kanban\",\n  answer: \"A visual workflow management method that optimizes work efficiency by limiting Work in Progress (WIP).\",\n  example: \"A team uses a Kanban board to track course creation progress from research to publishing.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Extreme Programming (XP)\",\n  answer: \"An Agile methodology that focuses on engineering practices such as test-driven development, pair programming, and continuous integration.\",\n  example: \"A software team uses XP to ensure high-quality, bug-free releases through automated testing and frequent code reviews.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Lean Software Development\",\n  answer: \"An Agile framework that emphasizes eliminating waste, delivering fast, and continuous improvement.\",\n  example: \"A startup develops only the core LMS features first, avoiding unnecessary complexity.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"SAFe (Scaled Agile Framework)\",\n  answer: \"A framework for scaling Agile across large organizations, aligning multiple teams towards a common goal.\",\n  example: \"A multinational company uses SAFe to coordinate Agile teams working on different parts of an enterprise LMS.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Disciplined Agile (DA)\",\n  answer: \"A process decision framework that offers guidance on selecting the best Agile approach for a specific context.\",\n  example: \"A project manager chooses DA to tailor Agile methodologies for different departments in an organization.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Feature-Driven Development (FDD)\",\n  answer: \"An Agile methodology that structures development around feature delivery, with frequent releases.\",\n  example: \"A team develops new LMS features such as student progress tracking in short, iterative cycles.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Dynamic Systems Development Method (DSDM)\",\n  answer: \"An Agile framework that focuses on rapid delivery of business solutions while maintaining governance.\",\n  example: \"A financial company uses DSDM to build an investment tracking tool with incremental releases.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Crystal Methodology\",\n  answer: \"A family of Agile methods that adjusts processes based on team size, project criticality, and priorities.\",\n  example: \"A small software startup uses Crystal Clear for lightweight Agile implementation with minimal documentation.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Agile Project Management (APM)\",\n  answer: \"A flexible project management approach that focuses on delivering value through iterative work cycles.\",\n  example: \"A company uses APM to manage e-learning content development, adapting plans as user needs change.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Scrum of Scrums (SoS)\",\n  answer: \"A scaling technique where multiple Scrum teams collaborate through cross-team coordination meetings.\",\n  example: \"A large EdTech company uses Scrum of Scrums to synchronize development efforts across multiple product teams.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Nexus Framework\",\n  answer: \"A scaled Agile framework built on Scrum for integrating work across multiple teams.\",\n  example: \"A global software team uses Nexus to coordinate multiple Scrum teams working on a single LMS platform.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Large-Scale Scrum (LeSS)\",\n  answer: \"A lightweight framework for scaling Scrum while keeping it simple and minimizing overhead.\",\n  example: \"A company adopts LeSS to extend Scrum principles across its growing product development teams.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Enterprise Agile\",\n  answer: \"The application of Agile principles to large organizations, ensuring flexibility while maintaining structure.\",\n  example: \"A Fortune 500 company uses Enterprise Agile to align Agile teams across different business units.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Hybrid Agile\",\n  answer: \"A combination of Agile and traditional (Waterfall) methodologies to fit specific project needs.\",\n  example: \"A government project follows a predictive approach for compliance but uses Agile for development work.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Continuous Delivery (CD)\",\n  answer: \"A development practice where code changes are automatically built, tested, and prepared for release.\",\n  example: \"A software company automates deployment pipelines to release new LMS features faster.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Continuous Integration (CI)\",\n  answer: \"A practice where developers frequently merge code changes into a shared repository to detect issues early.\",\n  example: \"A development team uses CI pipelines to integrate and test new LMS updates daily.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Agile Release Train (ART)\",\n  answer: \"A concept in SAFe where Agile teams align their work into synchronized release cycles.\",\n  example: \"A company coordinates Agile teams to release LMS updates every quarter through ART.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Test-Driven Development (TDD)\",\n  answer: \"A software development approach where tests are written before coding to ensure correctness.\",\n  example: \"A team writes test cases before implementing LMS authentication features.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Behavior-Driven Development (BDD)\",\n  answer: \"A testing approach that focuses on defining expected behavior in plain language before coding.\",\n  example: \"A developer writes BDD test cases using Gherkin syntax for an AI tutoring system.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"DevOps and Agile\",\n  answer: \"A collaboration between development and operations teams to enable continuous integration and deployment.\",\n  example: \"A project team automates software updates and monitoring for an online learning platform.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Pair Programming\",\n  answer: \"A practice in Extreme Programming (XP) where two developers work together on the same code.\",\n  example: \"A junior developer pairs with a senior engineer to improve coding skills while building new LMS features.\"\n}, {\n  category: \"Agile Methodologies\",\n  question: \"Agile Contracts\",\n  answer: \"Flexible contracts that allow for changing requirements and iterative delivery instead of fixed-scope agreements.\",\n  example: \"A company signs an Agile contract with an LMS vendor that adjusts feature requirements based on user feedback.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Agile Ceremonies\",\n  answer: \"Regular structured meetings in Agile methodologies that facilitate collaboration, planning, progress tracking, and continuous improvement.\",\n  example: \"A Scrum team holds a daily stand-up meeting to discuss progress and blockers.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Sprint Planning (Scrum)\",\n  answer: \"A meeting where the Scrum team selects user stories from the backlog to work on during the sprint.\",\n  example: \"A team decides which LMS features to develop in the next two-week sprint.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Daily Stand-Up (Daily Scrum)\",\n  answer: \"A short, 15-minute meeting where team members discuss progress, blockers, and upcoming tasks.\",\n  example: \"A team member mentions a bug blocking development, and another offers a quick fix.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Sprint Review\",\n  answer: \"A meeting at the end of the sprint where the team demonstrates completed work to stakeholders for feedback.\",\n  example: \"A development team presents a newly designed course dashboard to get feedback from instructors.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Sprint Retrospective\",\n  answer: \"A session where the team reflects on what went well, what didn’t, and how to improve in the next sprint.\",\n  example: \"A team identifies slow testing cycles as a bottleneck and decides to implement automated testing.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Backlog Refinement (Grooming)\",\n  answer: \"A meeting where the team reviews, updates, and prioritizes items in the product backlog.\",\n  example: \"A Product Owner clarifies requirements for an upcoming feature and removes outdated backlog items.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Release Planning\",\n  answer: \"A meeting to plan the timeline and scope of upcoming product releases.\",\n  example: \"A company plans three major LMS updates over the next six months.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Iteration Planning (Kanban & XP)\",\n  answer: \"A meeting where the team selects the next set of tasks to complete in an iteration.\",\n  example: \"A Kanban team prioritizes fixing urgent bugs before moving to new feature development.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"PI (Program Increment) Planning (SAFe)\",\n  answer: \"A large-scale planning event in Scaled Agile Framework (SAFe), where teams align for the next Program Increment.\",\n  example: \"Multiple Agile teams coordinate feature development across different business units.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Scrum of Scrums\",\n  answer: \"A meeting where representatives from multiple Scrum teams discuss dependencies and integration.\",\n  example: \"A company aligns multiple Agile teams working on an LMS by discussing cross-team blockers.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Three Amigos Meeting\",\n  answer: \"A meeting where a Developer, Tester, and Product Owner discuss user stories to ensure clear understanding.\",\n  example: \"Before implementing a new payment feature, the team clarifies acceptance criteria to avoid misalignment.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Sprint Goal Setting\",\n  answer: \"A practice where the team defines a clear objective for the sprint to maintain focus.\",\n  example: \"A sprint goal could be 'Improve the user experience for student dashboards'.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Stakeholder Review Meeting\",\n  answer: \"A session where stakeholders review progress and provide feedback on the project direction.\",\n  example: \"A university reviews an LMS prototype before approving the final development phase.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Increment Demonstration\",\n  answer: \"A meeting to showcase incremental progress to users or business teams.\",\n  example: \"After completing the first version of the AI tutoring system, the team demonstrates it to early adopters.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Kanban Flow Review\",\n  answer: \"A session where teams assess the movement of work through the Kanban board and optimize workflow.\",\n  example: \"A team identifies that content approval is a bottleneck and decides to automate parts of the review process.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Lean Coffee Meeting\",\n  answer: \"An informal, agenda-less meeting where participants discuss topics they find most valuable.\",\n  example: \"A team holds a Lean Coffee session to brainstorm solutions for reducing deployment delays.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Pre-Mortem Meeting\",\n  answer: \"A meeting where the team imagines project failure and identifies possible causes to prevent issues.\",\n  example: \"Before launching a new LMS, the team discusses potential problems like server crashes and content delays.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Roadmap Planning\",\n  answer: \"A session to align long-term project goals and major milestones.\",\n  example: \"A team sets a roadmap for launching new LMS features every quarter.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Action Item Review\",\n  answer: \"A follow-up meeting to track progress on tasks assigned in previous retrospectives or planning sessions.\",\n  example: \"A Scrum Master checks if the team implemented process improvements from the last retrospective.\"\n}, {\n  category: \"Agile Ceremonies\",\n  question: \"Sprint Cancellation Meeting\",\n  answer: \"A meeting called when a Sprint is canceled due to significant changes in business priorities.\",\n  example: \"A development team halts work on a new course format after leadership shifts to AI-driven tutoring.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Sprint Velocity\",\n  answer: \"A measure of how much work (in story points) a team completes in a sprint.\",\n  example: \"If a team completes 30 story points per sprint, they can use this metric for future sprint planning.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Lead Time\",\n  answer: \"The total time taken from when a request is made to when it is delivered.\",\n  example: \"A bug fix request takes 10 days from submission to deployment, making the lead time 10 days.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Lead Time\",\n  answer: \"The total time taken from when a request is made to when it is delivered.\",\n  example: \"A bug fix request takes 10 days from submission to deployment, making the lead time 10 days.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Cycle Time\",\n  answer: \"The time taken from when work starts on a task to when it is completed.\",\n  example: \"A feature takes 3 days to develop, test, and release, making the cycle time 3 days.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Cumulative Flow Diagram (CFD)\",\n  answer: \"A visual representation of work progress across different workflow stages.\",\n  example: \"A CFD helps a team identify if work is piling up in 'Testing,' causing a bottleneck.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Burnup Chart\",\n  answer: \"A chart that shows completed work over time, tracking progress toward the project goal.\",\n  example: \"A burnup chart shows that 70% of LMS development is complete, with 30% remaining.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Burndown Chart\",\n  answer: \"A chart that tracks the remaining work against time, aiming for zero at the sprint's end.\",\n  example: \"A Scrum team sees their burndown chart flattening, indicating a delay in sprint completion.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Work in Progress (WIP) Limits\",\n  answer: \"A Kanban practice that restricts the number of ongoing tasks to improve efficiency.\",\n  example: \"A team limits WIP to 3 tasks per developer to prevent overloading.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Throughput\",\n  answer: \"The number of tasks or work items completed in a given timeframe.\",\n  example: \"A team delivers 15 user stories in a sprint, giving them a throughput of 15.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Defect Density\",\n  answer: \"A measure of the number of defects per unit of code or work item.\",\n  example: \"A testing team reports 5 defects per 1,000 lines of code in the latest LMS release.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Code Coverage\",\n  answer: \"A measure of how much of the codebase is covered by automated tests.\",\n  example: \"If 60% of the LMS code is covered by unit tests, the team aims to increase it to 80%.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Escaped Defects\",\n  answer: \"Bugs or issues that reach production instead of being caught in testing.\",\n  example: \"If 5 critical bugs are found after a release, escaped defects are too high, requiring better testing.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Team Happiness Index\",\n  answer: \"A qualitative metric that measures team satisfaction and morale.\",\n  example: \"A Scrum Master uses anonymous surveys to assess team happiness after each sprint.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Net Promoter Score (NPS)\",\n  answer: \"A metric that measures customer satisfaction and likelihood to recommend the product.\",\n  example: \"An LMS platform receives an NPS of 8.5, indicating strong user satisfaction.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Agile Maturity Index\",\n  answer: \"A measure of how well a team or organization has adopted Agile practices.\",\n  example: \"A company assesses Agile adoption across teams using surveys and performance data.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Story Completion Ratio\",\n  answer: \"The percentage of planned user stories completed within a sprint.\",\n  example: \"If a team planned 10 stories and completed 8, the ratio is 80%.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Time Spent on Rework\",\n  answer: \"A measure of how much effort is spent on fixing or redoing work.\",\n  example: \"If 20% of a sprint is spent on bug fixes, rework is too high, indicating quality issues.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Release Readiness Index\",\n  answer: \"A checklist-based metric to evaluate if a product is ready for release.\",\n  example: \"A development team ensures all security tests, documentation, and user approvals are completed before release.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Cumulative Velocity\",\n  answer: \"A trend analysis metric that tracks velocity over multiple sprints to predict long-term performance.\",\n  example: \"A team sees an increasing cumulative velocity, indicating improved efficiency.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Blocker Resolution Time\",\n  answer: \"The average time taken to resolve critical blockers that hinder team progress.\",\n  example: \"If high-priority bugs take 2 days to resolve, efforts should be made to reduce this time.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Test Automation Coverage\",\n  answer: \"A metric that measures how many tests are automated vs. manual.\",\n  example: \"A team aims to automate 80% of regression tests to speed up deployments.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Sprint Goal Success Rate\",\n  answer: \"The percentage of sprints where teams meet their planned sprint goals.\",\n  example: \"If 5 out of 6 sprints met their goals, the success rate is 83%.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Technical Debt Ratio\",\n  answer: \"The amount of unaddressed technical debt compared to new development.\",\n  example: \"A company allocates one sprint every quarter to reduce technical debt.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Kanban Flow Efficiency\",\n  answer: \"A metric that measures the ratio of time spent actively working vs. time spent waiting.\",\n  example: \"If only 50% of a story's time is spent in active development, workflow improvements are needed.\"\n}, {\n  category: \"Agile Metrics and Reporting\",\n  question: \"Predictability Index\",\n  answer: \"A measure of how accurately a team meets its sprint commitments.\",\n  example: \"If a team consistently delivers 90% of their committed sprint work, their predictability is high.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Agile Tools and Techniques\",\n  answer: \"A collection of practices, frameworks, and software tools that help teams implement Agile principles efficiently.\",\n  example: \"A software team uses JIRA to manage sprints and track work items.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"User Stories\",\n  answer: \"Short, simple descriptions of a feature from the user’s perspective following the format: 'As a [user], I want [feature], so that [benefit].'\",\n  example: \"As a student, I want to track my progress so that I can see my improvement over time.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Story Mapping\",\n  answer: \"A technique to visually organize user stories based on workflows and dependencies.\",\n  example: \"A team uses story mapping to prioritize LMS onboarding features before moving to advanced analytics.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Personas\",\n  answer: \"Fictional representations of user types, based on research and behaviors, to guide development.\",\n  example: \"Sophia, a busy professional, takes courses on the LMS at night, so she needs mobile-friendly content.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Definition of Ready (DoR)\",\n  answer: \"A checklist that ensures a user story is fully defined and ready for development.\",\n  example: \"A story is considered 'Ready' only if acceptance criteria, dependencies, and estimated effort are clear.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Definition of Done (DoD)\",\n  answer: \"A set of criteria a task must meet before it is considered complete.\",\n  example: \"A user authentication feature is 'Done' when it is coded, tested, reviewed, and deployed.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Acceptance Criteria\",\n  answer: \"Specific conditions that must be met for a user story to be accepted.\",\n  example: \"A new login feature must support social media sign-ins and validate email formats.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Backlog Prioritization\",\n  answer: \"The process of ordering product backlog items based on importance, dependencies, and business value.\",\n  example: \"A team prioritizes fixing a major payment bug over adding a new quiz feature in the LMS.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"MoSCoW Prioritization\",\n  answer: \"A technique that categorizes backlog items into: Must Have, Should Have, Could Have, and Would Have.\",\n  example: \"A payment gateway is a 'Must Have,' but AI recommendations are a 'Could Have.'\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Fibonacci Estimation (Story Points)\",\n  answer: \"A technique for estimating effort using Fibonacci numbers (1, 2, 3, 5, 8, etc.) to reflect complexity.\",\n  example: \"A simple login screen is estimated as 2 story points, while a complex reporting dashboard is 8 story points.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Planning Poker\",\n  answer: \"A collaborative estimation technique where team members assign story points to user stories.\",\n  example: \"A development team uses planning poker to align on how complex a new search feature is.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Timeboxing\",\n  answer: \"Allocating fixed time limits for activities to maintain focus and efficiency.\",\n  example: \"Daily stand-ups are limited to 15 minutes to ensure efficiency.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Velocity\",\n  answer: \"A metric that measures how many story points a team completes per sprint.\",\n  example: \"A Scrum team completes an average of 30 story points per sprint, helping forecast future capacity.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Lead Time\",\n  answer: \"Time from request to delivery.\",\n  example: \"A user requests a new quiz feature, and it takes 15 days (Lead Time) but only 5 days of actual development (Cycle Time).\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Cycle Time\",\n  answer: \"Time taken to complete a task once started.\",\n  example: \"A user requests a new quiz feature, and it takes 15 days (Lead Time) but only 5 days of actual development (Cycle Time).\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Work In Progress (WIP) Limits\",\n  answer: \"A Kanban technique that restricts the number of tasks in progress to avoid overload.\",\n  example: \"A content team sets a WIP limit of 3 for course editing tasks to maintain focus.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Burnup & Burndown Charts\",\n  answer: \"Burnup Chart: Shows work completed over time. Burndown Chart: Shows remaining work vs. time.\",\n  example: \"A Scrum team uses a burndown chart to track progress toward completing sprint tasks.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Continuous Integration / Continuous Deployment (CI/CD)\",\n  answer: \"A DevOps practice that automates testing and deployment of code to improve delivery speed.\",\n  example: \"A company deploys LMS updates seamlessly every week without manual intervention.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Test-Driven Development (TDD)\",\n  answer: \"A practice where tests are written before the actual code to ensure correctness.\",\n  example: \"A developer writes unit tests before implementing a new dashboard feature.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Pair Programming\",\n  answer: \"A technique where two developers work together, one writing code and the other reviewing.\",\n  example: \"A junior developer pairs with a senior developer to improve efficiency and learn best practices.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Swarming (Agile Collaboration)\",\n  answer: \"A technique where multiple team members work together to quickly complete a critical task.\",\n  example: \"Developers, testers, and designers collaborate intensely to fix a production bug.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Spikes\",\n  answer: \"Time-boxed research tasks used to explore unknowns and reduce uncertainty before implementation.\",\n  example: \"A team spends a sprint on a security spike to test encryption methods before integrating them.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Agile Roadmap\",\n  answer: \"A flexible, high-level plan that aligns Agile development with business goals and timelines.\",\n  example: \"A product roadmap outlines LMS enhancements like mobile support, AI recommendations, and gamification.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Agile Dashboards & Reporting\",\n  answer: \"Visual tools that track project progress, bottlenecks, and team efficiency.\",\n  example: \"A team uses a JIRA dashboard to monitor sprint velocity and backlog status.\"\n}, {\n  category: \"Agile Tools and Techniques\",\n  question: \"Agile Retrospective Tools\",\n  answer: \"Digital or physical tools that facilitate team retrospectives and feedback collection.\",\n  example: \"A team uses Miro to run a remote retrospective and collect team feedback on sprint performance.\"\n}];\nexport default agileData;","map":{"version":3,"names":["agileData","category","question","answer","example"],"sources":["C:/Users/happy/Downloads/edzest-website-3/src/FlashcardApp/agileData.js"],"sourcesContent":["const agileData = [\r\n  {\r\n    category: \"Agile Mindset\",\r\n    question: \"Agile Mindset\",\r\n    answer: \"A way of thinking that embraces adaptability, collaboration, customer-centricity, and continuous improvement.\",\r\n    example: \"A project team embraces change by adjusting priorities based on user feedback rather than rigidly sticking to the original plan.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Agile Manifesto\",\r\n    answer: \"A declaration of four values and twelve principles that guide Agile development and project management.\",\r\n    example: \"A software team prioritizes working software over comprehensive documentation, aligning with Agile values.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Customer-Centric Approach\",\r\n    answer: \"Agile teams prioritize customer feedback and value delivery over rigid plans.\",\r\n    example: \"A team launches an MVP of an online course platform and refines features based on user feedback.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Servant Leadership\",\r\n    answer: \"A leadership approach where the leader supports and empowers the team instead of directing them.\",\r\n    example: \"A Scrum Master removes obstacles preventing the team from completing their sprint goals.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Incremental Development\",\r\n    answer: \"Small, functional parts of the project are delivered continuously.\",\r\n    example: \"A learning platform first launches with basic courses, then expands with more features in later iterations.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Iterative Development\",\r\n    answer: \"Repetitive cycles of improvement based on feedback.\",\r\n    example: \"A learning platform launches the course after multiple corrections on the entire course.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Fail Fast, Learn Fast\",\r\n    answer: \"Encouraging experimentation and learning from failures quickly to make improvements.\",\r\n    example: \"A startup tests multiple LMS pricing models and quickly pivots based on user response.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Self-Organizing Teams\",\r\n    answer: \"Teams that make their own decisions and manage work without micromanagement.\",\r\n    example: \"A development team chooses its own backlog priorities and assigns tasks collaboratively.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Continuous Improvement (Kaizen)\",\r\n    answer: \"A philosophy of ongoing improvement through small, regular changes.\",\r\n    example: \"A team conducts retrospective meetings to identify process inefficiencies and improve workflow.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Adaptability in Agile\",\r\n    answer: \"The ability to respond quickly to changing requirements and external factors.\",\r\n    example: \"A team adjusts its LMS development roadmap when new regulations require compliance updates.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Cross-Functional Teams\",\r\n    answer: \"Agile teams consist of members with diverse skills who work together towards a shared goal.\",\r\n    example: \"A Scrum team includes developers, testers, designers, and business analysts working collaboratively.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Empirical Process Control\",\r\n    answer: \"Decision-making based on observation, experimentation, and adaptation rather than rigid predictions.\",\r\n    example: \"A team adjusts sprint priorities after reviewing real user engagement metrics.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Working Software Over Documentation\",\r\n    answer: \"Agile prioritizes delivering functional products over extensive documentation.\",\r\n    example: \"A startup focuses on releasing an LMS prototype rather than spending months writing detailed specifications.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Minimal Viable Product (MVP) Approach\",\r\n    answer: \"Delivering the simplest version of a product that provides value, allowing for testing and feedback.\",\r\n    example: \"A project team launches an online quiz platform with just one subject before expanding to multiple topics.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Agile Mindset in Leadership\",\r\n    answer: \"Leaders embrace collaboration, transparency, empowerment, and iterative thinking.\",\r\n    example: \"A project manager removes roadblocks for the team instead of enforcing rigid deadlines.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Psychological Safety in Agile Teams\",\r\n    answer: \"A team environment where members feel safe to take risks, ask questions, and share ideas.\",\r\n    example: \"A team encourages open discussions without fear of blame when identifying process inefficiencies.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Value-Driven Development\",\r\n    answer: \"Agile teams prioritize work that delivers the highest business value first.\",\r\n    example: \"A team focuses on building the user authentication system before adding minor UI enhancements.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Agile Contracts\",\r\n    answer: \"Contracts that allow flexibility in scope and requirements instead of rigid, fixed agreements.\",\r\n    example: \"A software vendor uses a time-and-materials contract instead of a fixed-price contract for Agile projects.\"\r\n},\r\n{\r\n    category: \"Agile Mindset\",\r\n    question: \"Measuring Success in Agile\",\r\n    answer: \"Success is measured by value delivered, customer satisfaction, and team adaptability rather than following strict plans.\",\r\n    example: \"A project is considered successful when users actively engage with the new LMS platform and provide positive feedback.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Agile Methodologies\",\r\n  answer: \"A set of frameworks that follow Agile principles, focusing on iterative development, collaboration, and adaptability.\",\r\n  example: \"A software development team uses Scrum to break work into sprints and deliver updates every two weeks.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Scrum\",\r\n  answer: \"An Agile framework that organizes work into short iterations called sprints, with defined roles and ceremonies.\",\r\n  example: \"A development team delivers an MVP of an LMS after completing multiple Scrum sprints.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Kanban\",\r\n  answer: \"A visual workflow management method that optimizes work efficiency by limiting Work in Progress (WIP).\",\r\n  example: \"A team uses a Kanban board to track course creation progress from research to publishing.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Extreme Programming (XP)\",\r\n  answer: \"An Agile methodology that focuses on engineering practices such as test-driven development, pair programming, and continuous integration.\",\r\n  example: \"A software team uses XP to ensure high-quality, bug-free releases through automated testing and frequent code reviews.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Lean Software Development\",\r\n  answer: \"An Agile framework that emphasizes eliminating waste, delivering fast, and continuous improvement.\",\r\n  example: \"A startup develops only the core LMS features first, avoiding unnecessary complexity.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"SAFe (Scaled Agile Framework)\",\r\n  answer: \"A framework for scaling Agile across large organizations, aligning multiple teams towards a common goal.\",\r\n  example: \"A multinational company uses SAFe to coordinate Agile teams working on different parts of an enterprise LMS.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Disciplined Agile (DA)\",\r\n  answer: \"A process decision framework that offers guidance on selecting the best Agile approach for a specific context.\",\r\n  example: \"A project manager chooses DA to tailor Agile methodologies for different departments in an organization.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Feature-Driven Development (FDD)\",\r\n  answer: \"An Agile methodology that structures development around feature delivery, with frequent releases.\",\r\n  example: \"A team develops new LMS features such as student progress tracking in short, iterative cycles.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Dynamic Systems Development Method (DSDM)\",\r\n  answer: \"An Agile framework that focuses on rapid delivery of business solutions while maintaining governance.\",\r\n  example: \"A financial company uses DSDM to build an investment tracking tool with incremental releases.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Crystal Methodology\",\r\n  answer: \"A family of Agile methods that adjusts processes based on team size, project criticality, and priorities.\",\r\n  example: \"A small software startup uses Crystal Clear for lightweight Agile implementation with minimal documentation.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Agile Project Management (APM)\",\r\n  answer: \"A flexible project management approach that focuses on delivering value through iterative work cycles.\",\r\n  example: \"A company uses APM to manage e-learning content development, adapting plans as user needs change.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Scrum of Scrums (SoS)\",\r\n  answer: \"A scaling technique where multiple Scrum teams collaborate through cross-team coordination meetings.\",\r\n  example: \"A large EdTech company uses Scrum of Scrums to synchronize development efforts across multiple product teams.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Nexus Framework\",\r\n  answer: \"A scaled Agile framework built on Scrum for integrating work across multiple teams.\",\r\n  example: \"A global software team uses Nexus to coordinate multiple Scrum teams working on a single LMS platform.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Large-Scale Scrum (LeSS)\",\r\n  answer: \"A lightweight framework for scaling Scrum while keeping it simple and minimizing overhead.\",\r\n  example: \"A company adopts LeSS to extend Scrum principles across its growing product development teams.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Enterprise Agile\",\r\n  answer: \"The application of Agile principles to large organizations, ensuring flexibility while maintaining structure.\",\r\n  example: \"A Fortune 500 company uses Enterprise Agile to align Agile teams across different business units.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Hybrid Agile\",\r\n  answer: \"A combination of Agile and traditional (Waterfall) methodologies to fit specific project needs.\",\r\n  example: \"A government project follows a predictive approach for compliance but uses Agile for development work.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Continuous Delivery (CD)\",\r\n  answer: \"A development practice where code changes are automatically built, tested, and prepared for release.\",\r\n  example: \"A software company automates deployment pipelines to release new LMS features faster.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Continuous Integration (CI)\",\r\n  answer: \"A practice where developers frequently merge code changes into a shared repository to detect issues early.\",\r\n  example: \"A development team uses CI pipelines to integrate and test new LMS updates daily.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Agile Release Train (ART)\",\r\n  answer: \"A concept in SAFe where Agile teams align their work into synchronized release cycles.\",\r\n  example: \"A company coordinates Agile teams to release LMS updates every quarter through ART.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Test-Driven Development (TDD)\",\r\n  answer: \"A software development approach where tests are written before coding to ensure correctness.\",\r\n  example: \"A team writes test cases before implementing LMS authentication features.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Behavior-Driven Development (BDD)\",\r\n  answer: \"A testing approach that focuses on defining expected behavior in plain language before coding.\",\r\n  example: \"A developer writes BDD test cases using Gherkin syntax for an AI tutoring system.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"DevOps and Agile\",\r\n  answer: \"A collaboration between development and operations teams to enable continuous integration and deployment.\",\r\n  example: \"A project team automates software updates and monitoring for an online learning platform.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Pair Programming\",\r\n  answer: \"A practice in Extreme Programming (XP) where two developers work together on the same code.\",\r\n  example: \"A junior developer pairs with a senior engineer to improve coding skills while building new LMS features.\"\r\n},\r\n{\r\n  category: \"Agile Methodologies\",\r\n  question: \"Agile Contracts\",\r\n  answer: \"Flexible contracts that allow for changing requirements and iterative delivery instead of fixed-scope agreements.\",\r\n  example: \"A company signs an Agile contract with an LMS vendor that adjusts feature requirements based on user feedback.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Agile Ceremonies\",\r\n  answer: \"Regular structured meetings in Agile methodologies that facilitate collaboration, planning, progress tracking, and continuous improvement.\",\r\n  example: \"A Scrum team holds a daily stand-up meeting to discuss progress and blockers.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Sprint Planning (Scrum)\",\r\n  answer: \"A meeting where the Scrum team selects user stories from the backlog to work on during the sprint.\",\r\n  example: \"A team decides which LMS features to develop in the next two-week sprint.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Daily Stand-Up (Daily Scrum)\",\r\n  answer: \"A short, 15-minute meeting where team members discuss progress, blockers, and upcoming tasks.\",\r\n  example: \"A team member mentions a bug blocking development, and another offers a quick fix.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Sprint Review\",\r\n  answer: \"A meeting at the end of the sprint where the team demonstrates completed work to stakeholders for feedback.\",\r\n  example: \"A development team presents a newly designed course dashboard to get feedback from instructors.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Sprint Retrospective\",\r\n  answer: \"A session where the team reflects on what went well, what didn’t, and how to improve in the next sprint.\",\r\n  example: \"A team identifies slow testing cycles as a bottleneck and decides to implement automated testing.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Backlog Refinement (Grooming)\",\r\n  answer: \"A meeting where the team reviews, updates, and prioritizes items in the product backlog.\",\r\n  example: \"A Product Owner clarifies requirements for an upcoming feature and removes outdated backlog items.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Release Planning\",\r\n  answer: \"A meeting to plan the timeline and scope of upcoming product releases.\",\r\n  example: \"A company plans three major LMS updates over the next six months.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Iteration Planning (Kanban & XP)\",\r\n  answer: \"A meeting where the team selects the next set of tasks to complete in an iteration.\",\r\n  example: \"A Kanban team prioritizes fixing urgent bugs before moving to new feature development.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"PI (Program Increment) Planning (SAFe)\",\r\n  answer: \"A large-scale planning event in Scaled Agile Framework (SAFe), where teams align for the next Program Increment.\",\r\n  example: \"Multiple Agile teams coordinate feature development across different business units.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Scrum of Scrums\",\r\n  answer: \"A meeting where representatives from multiple Scrum teams discuss dependencies and integration.\",\r\n  example: \"A company aligns multiple Agile teams working on an LMS by discussing cross-team blockers.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Three Amigos Meeting\",\r\n  answer: \"A meeting where a Developer, Tester, and Product Owner discuss user stories to ensure clear understanding.\",\r\n  example: \"Before implementing a new payment feature, the team clarifies acceptance criteria to avoid misalignment.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Sprint Goal Setting\",\r\n  answer: \"A practice where the team defines a clear objective for the sprint to maintain focus.\",\r\n  example: \"A sprint goal could be 'Improve the user experience for student dashboards'.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Stakeholder Review Meeting\",\r\n  answer: \"A session where stakeholders review progress and provide feedback on the project direction.\",\r\n  example: \"A university reviews an LMS prototype before approving the final development phase.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Increment Demonstration\",\r\n  answer: \"A meeting to showcase incremental progress to users or business teams.\",\r\n  example: \"After completing the first version of the AI tutoring system, the team demonstrates it to early adopters.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Kanban Flow Review\",\r\n  answer: \"A session where teams assess the movement of work through the Kanban board and optimize workflow.\",\r\n  example: \"A team identifies that content approval is a bottleneck and decides to automate parts of the review process.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Lean Coffee Meeting\",\r\n  answer: \"An informal, agenda-less meeting where participants discuss topics they find most valuable.\",\r\n  example: \"A team holds a Lean Coffee session to brainstorm solutions for reducing deployment delays.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Pre-Mortem Meeting\",\r\n  answer: \"A meeting where the team imagines project failure and identifies possible causes to prevent issues.\",\r\n  example: \"Before launching a new LMS, the team discusses potential problems like server crashes and content delays.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Roadmap Planning\",\r\n  answer: \"A session to align long-term project goals and major milestones.\",\r\n  example: \"A team sets a roadmap for launching new LMS features every quarter.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Action Item Review\",\r\n  answer: \"A follow-up meeting to track progress on tasks assigned in previous retrospectives or planning sessions.\",\r\n  example: \"A Scrum Master checks if the team implemented process improvements from the last retrospective.\"\r\n},\r\n{\r\n  category: \"Agile Ceremonies\",\r\n  question: \"Sprint Cancellation Meeting\",\r\n  answer: \"A meeting called when a Sprint is canceled due to significant changes in business priorities.\",\r\n  example: \"A development team halts work on a new course format after leadership shifts to AI-driven tutoring.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Sprint Velocity\",\r\n  answer: \"A measure of how much work (in story points) a team completes in a sprint.\",\r\n  example: \"If a team completes 30 story points per sprint, they can use this metric for future sprint planning.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Lead Time\",\r\n  answer: \"The total time taken from when a request is made to when it is delivered.\",\r\n  example: \"A bug fix request takes 10 days from submission to deployment, making the lead time 10 days.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Lead Time\",\r\n  answer: \"The total time taken from when a request is made to when it is delivered.\",\r\n  example: \"A bug fix request takes 10 days from submission to deployment, making the lead time 10 days.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Cycle Time\",\r\n  answer: \"The time taken from when work starts on a task to when it is completed.\",\r\n  example: \"A feature takes 3 days to develop, test, and release, making the cycle time 3 days.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Cumulative Flow Diagram (CFD)\",\r\n  answer: \"A visual representation of work progress across different workflow stages.\",\r\n  example: \"A CFD helps a team identify if work is piling up in 'Testing,' causing a bottleneck.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Burnup Chart\",\r\n  answer: \"A chart that shows completed work over time, tracking progress toward the project goal.\",\r\n  example: \"A burnup chart shows that 70% of LMS development is complete, with 30% remaining.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Burndown Chart\",\r\n  answer: \"A chart that tracks the remaining work against time, aiming for zero at the sprint's end.\",\r\n  example: \"A Scrum team sees their burndown chart flattening, indicating a delay in sprint completion.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Work in Progress (WIP) Limits\",\r\n  answer: \"A Kanban practice that restricts the number of ongoing tasks to improve efficiency.\",\r\n  example: \"A team limits WIP to 3 tasks per developer to prevent overloading.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Throughput\",\r\n  answer: \"The number of tasks or work items completed in a given timeframe.\",\r\n  example: \"A team delivers 15 user stories in a sprint, giving them a throughput of 15.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Defect Density\",\r\n  answer: \"A measure of the number of defects per unit of code or work item.\",\r\n  example: \"A testing team reports 5 defects per 1,000 lines of code in the latest LMS release.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Code Coverage\",\r\n  answer: \"A measure of how much of the codebase is covered by automated tests.\",\r\n  example: \"If 60% of the LMS code is covered by unit tests, the team aims to increase it to 80%.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Escaped Defects\",\r\n  answer: \"Bugs or issues that reach production instead of being caught in testing.\",\r\n  example: \"If 5 critical bugs are found after a release, escaped defects are too high, requiring better testing.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Team Happiness Index\",\r\n  answer: \"A qualitative metric that measures team satisfaction and morale.\",\r\n  example: \"A Scrum Master uses anonymous surveys to assess team happiness after each sprint.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Net Promoter Score (NPS)\",\r\n  answer: \"A metric that measures customer satisfaction and likelihood to recommend the product.\",\r\n  example: \"An LMS platform receives an NPS of 8.5, indicating strong user satisfaction.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Agile Maturity Index\",\r\n  answer: \"A measure of how well a team or organization has adopted Agile practices.\",\r\n  example: \"A company assesses Agile adoption across teams using surveys and performance data.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Story Completion Ratio\",\r\n  answer: \"The percentage of planned user stories completed within a sprint.\",\r\n  example: \"If a team planned 10 stories and completed 8, the ratio is 80%.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Time Spent on Rework\",\r\n  answer: \"A measure of how much effort is spent on fixing or redoing work.\",\r\n  example: \"If 20% of a sprint is spent on bug fixes, rework is too high, indicating quality issues.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Release Readiness Index\",\r\n  answer: \"A checklist-based metric to evaluate if a product is ready for release.\",\r\n  example: \"A development team ensures all security tests, documentation, and user approvals are completed before release.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Cumulative Velocity\",\r\n  answer: \"A trend analysis metric that tracks velocity over multiple sprints to predict long-term performance.\",\r\n  example: \"A team sees an increasing cumulative velocity, indicating improved efficiency.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Blocker Resolution Time\",\r\n  answer: \"The average time taken to resolve critical blockers that hinder team progress.\",\r\n  example: \"If high-priority bugs take 2 days to resolve, efforts should be made to reduce this time.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Test Automation Coverage\",\r\n  answer: \"A metric that measures how many tests are automated vs. manual.\",\r\n  example: \"A team aims to automate 80% of regression tests to speed up deployments.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Sprint Goal Success Rate\",\r\n  answer: \"The percentage of sprints where teams meet their planned sprint goals.\",\r\n  example: \"If 5 out of 6 sprints met their goals, the success rate is 83%.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Technical Debt Ratio\",\r\n  answer: \"The amount of unaddressed technical debt compared to new development.\",\r\nexample: \"A company allocates one sprint every quarter to reduce technical debt.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Kanban Flow Efficiency\",\r\n  answer: \"A metric that measures the ratio of time spent actively working vs. time spent waiting.\",\r\n  example: \"If only 50% of a story's time is spent in active development, workflow improvements are needed.\"\r\n},\r\n{\r\n  category: \"Agile Metrics and Reporting\",\r\n  question: \"Predictability Index\",\r\n  answer: \"A measure of how accurately a team meets its sprint commitments.\",\r\n  example: \"If a team consistently delivers 90% of their committed sprint work, their predictability is high.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Agile Tools and Techniques\",\r\n  answer: \"A collection of practices, frameworks, and software tools that help teams implement Agile principles efficiently.\",\r\n  example: \"A software team uses JIRA to manage sprints and track work items.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"User Stories\",\r\n  answer: \"Short, simple descriptions of a feature from the user’s perspective following the format: 'As a [user], I want [feature], so that [benefit].'\",\r\n  example: \"As a student, I want to track my progress so that I can see my improvement over time.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Story Mapping\",\r\n  answer: \"A technique to visually organize user stories based on workflows and dependencies.\",\r\n  example: \"A team uses story mapping to prioritize LMS onboarding features before moving to advanced analytics.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Personas\",\r\n  answer: \"Fictional representations of user types, based on research and behaviors, to guide development.\",\r\n  example: \"Sophia, a busy professional, takes courses on the LMS at night, so she needs mobile-friendly content.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Definition of Ready (DoR)\",\r\n  answer: \"A checklist that ensures a user story is fully defined and ready for development.\",\r\n  example: \"A story is considered 'Ready' only if acceptance criteria, dependencies, and estimated effort are clear.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Definition of Done (DoD)\",\r\n  answer: \"A set of criteria a task must meet before it is considered complete.\",\r\n  example: \"A user authentication feature is 'Done' when it is coded, tested, reviewed, and deployed.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Acceptance Criteria\",\r\n  answer: \"Specific conditions that must be met for a user story to be accepted.\",\r\n  example: \"A new login feature must support social media sign-ins and validate email formats.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Backlog Prioritization\",\r\n  answer: \"The process of ordering product backlog items based on importance, dependencies, and business value.\",\r\n  example: \"A team prioritizes fixing a major payment bug over adding a new quiz feature in the LMS.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"MoSCoW Prioritization\",\r\n  answer: \"A technique that categorizes backlog items into: Must Have, Should Have, Could Have, and Would Have.\",\r\n  example: \"A payment gateway is a 'Must Have,' but AI recommendations are a 'Could Have.'\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Fibonacci Estimation (Story Points)\",\r\n  answer: \"A technique for estimating effort using Fibonacci numbers (1, 2, 3, 5, 8, etc.) to reflect complexity.\",\r\n  example: \"A simple login screen is estimated as 2 story points, while a complex reporting dashboard is 8 story points.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Planning Poker\",\r\n  answer: \"A collaborative estimation technique where team members assign story points to user stories.\",\r\n  example: \"A development team uses planning poker to align on how complex a new search feature is.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Timeboxing\",\r\n  answer: \"Allocating fixed time limits for activities to maintain focus and efficiency.\",\r\n  example: \"Daily stand-ups are limited to 15 minutes to ensure efficiency.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Velocity\",\r\n  answer: \"A metric that measures how many story points a team completes per sprint.\",\r\n  example: \"A Scrum team completes an average of 30 story points per sprint, helping forecast future capacity.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Lead Time\",\r\n  answer: \"Time from request to delivery.\",\r\n  example: \"A user requests a new quiz feature, and it takes 15 days (Lead Time) but only 5 days of actual development (Cycle Time).\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Cycle Time\",\r\n  answer: \"Time taken to complete a task once started.\",\r\n  example: \"A user requests a new quiz feature, and it takes 15 days (Lead Time) but only 5 days of actual development (Cycle Time).\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Work In Progress (WIP) Limits\",\r\n  answer: \"A Kanban technique that restricts the number of tasks in progress to avoid overload.\",\r\n  example: \"A content team sets a WIP limit of 3 for course editing tasks to maintain focus.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Burnup & Burndown Charts\",\r\n  answer: \"Burnup Chart: Shows work completed over time. Burndown Chart: Shows remaining work vs. time.\",\r\n  example: \"A Scrum team uses a burndown chart to track progress toward completing sprint tasks.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Continuous Integration / Continuous Deployment (CI/CD)\",\r\n  answer: \"A DevOps practice that automates testing and deployment of code to improve delivery speed.\",\r\n  example: \"A company deploys LMS updates seamlessly every week without manual intervention.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Test-Driven Development (TDD)\",\r\n  answer: \"A practice where tests are written before the actual code to ensure correctness.\",\r\n  example: \"A developer writes unit tests before implementing a new dashboard feature.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Pair Programming\",\r\n  answer: \"A technique where two developers work together, one writing code and the other reviewing.\",\r\n  example: \"A junior developer pairs with a senior developer to improve efficiency and learn best practices.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Swarming (Agile Collaboration)\",\r\n  answer: \"A technique where multiple team members work together to quickly complete a critical task.\",\r\n  example: \"Developers, testers, and designers collaborate intensely to fix a production bug.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Spikes\",\r\n  answer: \"Time-boxed research tasks used to explore unknowns and reduce uncertainty before implementation.\",\r\n  example: \"A team spends a sprint on a security spike to test encryption methods before integrating them.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Agile Roadmap\",\r\n  answer: \"A flexible, high-level plan that aligns Agile development with business goals and timelines.\",\r\n  example: \"A product roadmap outlines LMS enhancements like mobile support, AI recommendations, and gamification.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Agile Dashboards & Reporting\",\r\n  answer: \"Visual tools that track project progress, bottlenecks, and team efficiency.\",\r\n  example: \"A team uses a JIRA dashboard to monitor sprint velocity and backlog status.\"\r\n},\r\n{\r\n  category: \"Agile Tools and Techniques\",\r\n  question: \"Agile Retrospective Tools\",\r\n  answer: \"Digital or physical tools that facilitate team retrospectives and feedback collection.\",\r\n  example: \"A team uses Miro to run a remote retrospective and collect team feedback on sprint performance.\"\r\n}\r\n];\r\n\r\nexport default agileData;\r\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CAChB;EACEC,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,eAAe;EACzBC,MAAM,EAAE,+GAA+G;EACvHC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,iBAAiB;EAC3BC,MAAM,EAAE,yGAAyG;EACjHC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,2BAA2B;EACrCC,MAAM,EAAE,+EAA+E;EACvFC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,oBAAoB;EAC9BC,MAAM,EAAE,kGAAkG;EAC1GC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,yBAAyB;EACnCC,MAAM,EAAE,oEAAoE;EAC5EC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,uBAAuB;EACjCC,MAAM,EAAE,qDAAqD;EAC7DC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,uBAAuB;EACjCC,MAAM,EAAE,sFAAsF;EAC9FC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,uBAAuB;EACjCC,MAAM,EAAE,8EAA8E;EACtFC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,iCAAiC;EAC3CC,MAAM,EAAE,qEAAqE;EAC7EC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,uBAAuB;EACjCC,MAAM,EAAE,+EAA+E;EACvFC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,wBAAwB;EAClCC,MAAM,EAAE,6FAA6F;EACrGC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,2BAA2B;EACrCC,MAAM,EAAE,sGAAsG;EAC9GC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,qCAAqC;EAC/CC,MAAM,EAAE,gFAAgF;EACxFC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,uCAAuC;EACjDC,MAAM,EAAE,sGAAsG;EAC9GC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,6BAA6B;EACvCC,MAAM,EAAE,mFAAmF;EAC3FC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,qCAAqC;EAC/CC,MAAM,EAAE,2FAA2F;EACnGC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,0BAA0B;EACpCC,MAAM,EAAE,6EAA6E;EACrFC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,iBAAiB;EAC3BC,MAAM,EAAE,gGAAgG;EACxGC,OAAO,EAAE;AACb,CAAC,EACD;EACIH,QAAQ,EAAE,eAAe;EACzBC,QAAQ,EAAE,4BAA4B;EACtCC,MAAM,EAAE,0HAA0H;EAClIC,OAAO,EAAE;AACb,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,qBAAqB;EAC/BC,MAAM,EAAE,uHAAuH;EAC/HC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,OAAO;EACjBC,MAAM,EAAE,iHAAiH;EACzHC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,QAAQ;EAClBC,MAAM,EAAE,wGAAwG;EAChHC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,0BAA0B;EACpCC,MAAM,EAAE,2IAA2I;EACnJC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,2BAA2B;EACrCC,MAAM,EAAE,oGAAoG;EAC5GC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,+BAA+B;EACzCC,MAAM,EAAE,0GAA0G;EAClHC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,wBAAwB;EAClCC,MAAM,EAAE,gHAAgH;EACxHC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,kCAAkC;EAC5CC,MAAM,EAAE,mGAAmG;EAC3GC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,2CAA2C;EACrDC,MAAM,EAAE,uGAAuG;EAC/GC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,qBAAqB;EAC/BC,MAAM,EAAE,2GAA2G;EACnHC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,gCAAgC;EAC1CC,MAAM,EAAE,wGAAwG;EAChHC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,uBAAuB;EACjCC,MAAM,EAAE,sGAAsG;EAC9GC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,iBAAiB;EAC3BC,MAAM,EAAE,qFAAqF;EAC7FC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,0BAA0B;EACpCC,MAAM,EAAE,4FAA4F;EACpGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,kBAAkB;EAC5BC,MAAM,EAAE,+GAA+G;EACvHC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,cAAc;EACxBC,MAAM,EAAE,iGAAiG;EACzGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,0BAA0B;EACpCC,MAAM,EAAE,sGAAsG;EAC9GC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,6BAA6B;EACvCC,MAAM,EAAE,4GAA4G;EACpHC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,2BAA2B;EACrCC,MAAM,EAAE,wFAAwF;EAChGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,+BAA+B;EACzCC,MAAM,EAAE,8FAA8F;EACtGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,mCAAmC;EAC7CC,MAAM,EAAE,gGAAgG;EACxGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,kBAAkB;EAC5BC,MAAM,EAAE,2GAA2G;EACnHC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,kBAAkB;EAC5BC,MAAM,EAAE,6FAA6F;EACrGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,qBAAqB;EAC/BC,QAAQ,EAAE,iBAAiB;EAC3BC,MAAM,EAAE,mHAAmH;EAC3HC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,kBAAkB;EAC5BC,MAAM,EAAE,4IAA4I;EACpJC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,yBAAyB;EACnCC,MAAM,EAAE,oGAAoG;EAC5GC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,8BAA8B;EACxCC,MAAM,EAAE,+FAA+F;EACvGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,eAAe;EACzBC,MAAM,EAAE,6GAA6G;EACrHC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,sBAAsB;EAChCC,MAAM,EAAE,0GAA0G;EAClHC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,+BAA+B;EACzCC,MAAM,EAAE,0FAA0F;EAClGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,kBAAkB;EAC5BC,MAAM,EAAE,wEAAwE;EAChFC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,kCAAkC;EAC5CC,MAAM,EAAE,qFAAqF;EAC7FC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,wCAAwC;EAClDC,MAAM,EAAE,kHAAkH;EAC1HC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,iBAAiB;EAC3BC,MAAM,EAAE,iGAAiG;EACzGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,sBAAsB;EAChCC,MAAM,EAAE,4GAA4G;EACpHC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,qBAAqB;EAC/BC,MAAM,EAAE,uFAAuF;EAC/FC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,4BAA4B;EACtCC,MAAM,EAAE,6FAA6F;EACrGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,yBAAyB;EACnCC,MAAM,EAAE,wEAAwE;EAChFC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,oBAAoB;EAC9BC,MAAM,EAAE,mGAAmG;EAC3GC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,qBAAqB;EAC/BC,MAAM,EAAE,6FAA6F;EACrGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,oBAAoB;EAC9BC,MAAM,EAAE,qGAAqG;EAC7GC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,kBAAkB;EAC5BC,MAAM,EAAE,kEAAkE;EAC1EC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,oBAAoB;EAC9BC,MAAM,EAAE,0GAA0G;EAClHC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,kBAAkB;EAC5BC,QAAQ,EAAE,6BAA6B;EACvCC,MAAM,EAAE,+FAA+F;EACvGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,iBAAiB;EAC3BC,MAAM,EAAE,4EAA4E;EACpFC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,WAAW;EACrBC,MAAM,EAAE,2EAA2E;EACnFC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,WAAW;EACrBC,MAAM,EAAE,2EAA2E;EACnFC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,YAAY;EACtBC,MAAM,EAAE,yEAAyE;EACjFC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,+BAA+B;EACzCC,MAAM,EAAE,4EAA4E;EACpFC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,cAAc;EACxBC,MAAM,EAAE,yFAAyF;EACjGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,gBAAgB;EAC1BC,MAAM,EAAE,2FAA2F;EACnGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,+BAA+B;EACzCC,MAAM,EAAE,qFAAqF;EAC7FC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,YAAY;EACtBC,MAAM,EAAE,mEAAmE;EAC3EC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,gBAAgB;EAC1BC,MAAM,EAAE,mEAAmE;EAC3EC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,eAAe;EACzBC,MAAM,EAAE,sEAAsE;EAC9EC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,iBAAiB;EAC3BC,MAAM,EAAE,0EAA0E;EAClFC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,sBAAsB;EAChCC,MAAM,EAAE,kEAAkE;EAC1EC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,0BAA0B;EACpCC,MAAM,EAAE,uFAAuF;EAC/FC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,sBAAsB;EAChCC,MAAM,EAAE,2EAA2E;EACnFC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,wBAAwB;EAClCC,MAAM,EAAE,mEAAmE;EAC3EC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,sBAAsB;EAChCC,MAAM,EAAE,kEAAkE;EAC1EC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,yBAAyB;EACnCC,MAAM,EAAE,yEAAyE;EACjFC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,qBAAqB;EAC/BC,MAAM,EAAE,sGAAsG;EAC9GC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,yBAAyB;EACnCC,MAAM,EAAE,gFAAgF;EACxFC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,0BAA0B;EACpCC,MAAM,EAAE,iEAAiE;EACzEC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,0BAA0B;EACpCC,MAAM,EAAE,wEAAwE;EAChFC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,sBAAsB;EAChCC,MAAM,EAAE,uEAAuE;EACjFC,OAAO,EAAE;AACT,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,wBAAwB;EAClCC,MAAM,EAAE,yFAAyF;EACjGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,6BAA6B;EACvCC,QAAQ,EAAE,sBAAsB;EAChCC,MAAM,EAAE,kEAAkE;EAC1EC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,4BAA4B;EACtCC,MAAM,EAAE,mHAAmH;EAC3HC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,cAAc;EACxBC,MAAM,EAAE,+IAA+I;EACvJC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,eAAe;EACzBC,MAAM,EAAE,oFAAoF;EAC5FC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,UAAU;EACpBC,MAAM,EAAE,iGAAiG;EACzGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,2BAA2B;EACrCC,MAAM,EAAE,mFAAmF;EAC3FC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,0BAA0B;EACpCC,MAAM,EAAE,sEAAsE;EAC9EC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,qBAAqB;EAC/BC,MAAM,EAAE,uEAAuE;EAC/EC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,wBAAwB;EAClCC,MAAM,EAAE,sGAAsG;EAC9GC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,uBAAuB;EACjCC,MAAM,EAAE,sGAAsG;EAC9GC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,qCAAqC;EAC/CC,MAAM,EAAE,wGAAwG;EAChHC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,gBAAgB;EAC1BC,MAAM,EAAE,8FAA8F;EACtGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,YAAY;EACtBC,MAAM,EAAE,+EAA+E;EACvFC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,UAAU;EACpBC,MAAM,EAAE,2EAA2E;EACnFC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,WAAW;EACrBC,MAAM,EAAE,gCAAgC;EACxCC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,YAAY;EACtBC,MAAM,EAAE,6CAA6C;EACrDC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,+BAA+B;EACzCC,MAAM,EAAE,sFAAsF;EAC9FC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,0BAA0B;EACpCC,MAAM,EAAE,8FAA8F;EACtGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,wDAAwD;EAClEC,MAAM,EAAE,4FAA4F;EACpGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,+BAA+B;EACzCC,MAAM,EAAE,kFAAkF;EAC1FC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,kBAAkB;EAC5BC,MAAM,EAAE,2FAA2F;EACnGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,gCAAgC;EAC1CC,MAAM,EAAE,4FAA4F;EACpGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,QAAQ;EAClBC,MAAM,EAAE,kGAAkG;EAC1GC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,eAAe;EACzBC,MAAM,EAAE,8FAA8F;EACtGC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,8BAA8B;EACxCC,MAAM,EAAE,6EAA6E;EACrFC,OAAO,EAAE;AACX,CAAC,EACD;EACEH,QAAQ,EAAE,4BAA4B;EACtCC,QAAQ,EAAE,2BAA2B;EACrCC,MAAM,EAAE,wFAAwF;EAChGC,OAAO,EAAE;AACX,CAAC,CACA;AAED,eAAeJ,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}