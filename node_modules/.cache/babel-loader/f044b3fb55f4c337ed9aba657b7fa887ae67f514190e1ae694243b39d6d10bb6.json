{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\happy\\\\Downloads\\\\edzest-website-3\\\\src\\\\FlashcardApp\\\\FlashNavbar.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { FaCog, FaTimes, FaMoon, FaSun } from \"react-icons/fa\";\n\n// const FlashNavbar = ({ setScore, setProgress, setCurrentCardIndex, setAnsweredCards }) => {\n//   const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n//   const [isDarkMode, setIsDarkMode] = useState(\n//     JSON.parse(localStorage.getItem(\"darkMode\")) || false\n//   );\n\n//   // Handle Dark Mode\n//   useEffect(() => {\n//     if (isDarkMode) {\n//       document.body.classList.add(\"dark-mode\");\n//     } else {\n//       document.body.classList.remove(\"dark-mode\");\n//     }\n//     localStorage.setItem(\"darkMode\", JSON.stringify(isDarkMode));\n//   }, [isDarkMode]);\n\n//   return (\n//     <>\n//       {/* Navbar */}\n//       <nav className=\"navbar navbar-dark bg-white px-3 d-flex justify-content-between\" style={{ marginTop: \"-21px\", marginBottom: \"-27px\" }}>\n//         <h4 className=\"m-0\" style={{ color: \"#4748ac\" }}>Flashcard</h4>\n//         <FaCog\n//           size={24}\n//           className=\"cursor-pointer\"\n//           onClick={() => setIsSidebarOpen(true)}\n//           style={{ cursor: \"pointer\", color: \"#4748ac\" }}\n//         />\n//       </nav>\n\n//       {/* ✅ Overlay to close sidebar when clicking outside */}\n//       {isSidebarOpen && (\n//         <div\n//           className=\"overlay\"\n//           onClick={() => setIsSidebarOpen(false)}\n//           style={{\n//             position: \"fixed\",\n//             top: 0,\n//             left: 0,\n//             width: \"100%\",\n//             height: \"100vh\",\n//             backgroundColor: \"rgba(0, 0, 0, 0.4)\",\n//             zIndex: 999, // Behind the sidebar\n//           }}\n//         ></div>\n//       )}\n\n//       {/* Sidebar */}\n//       <div\n//         className={`sidebar ${isSidebarOpen ? \"open\" : \"\"}`}\n//         style={{\n//           position: \"fixed\",\n//           top: 0,\n//           right: isSidebarOpen ? \"0\" : \"-250px\",\n//           width: \"250px\",\n//           height: \"100vh\",\n//           backgroundColor: \"#f8f9fa\",\n//           boxShadow: \"-2px 0 5px rgba(0, 0, 0, 0.2)\",\n//           transition: \"right 0.3s ease-in-out\",\n//           padding: \"20px\",\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           zIndex: 1000,\n//         }}\n//         onClick={(e) => e.stopPropagation()} // ✅ Prevent closing when clicking inside the sidebar\n//       >\n//         {/* Close Button */}\n//         <FaTimes\n//           size={24}\n//           style={{ cursor: \"pointer\", color: \"black\" }}\n//           onClick={() => setIsSidebarOpen(false)}\n//         />\n\n//         {/* Clear Score Button */}\n//         <button\n//   className=\"btn btn-danger mt-4\"\n//   onClick={() => {\n//     setScore(0);\n//     setProgress(0);\n//     setCurrentCardIndex(0);\n//     setAnsweredCards({});\n\n//     localStorage.setItem(\"score\", 0);\n//     localStorage.setItem(\"progress\", 0);\n//     localStorage.setItem(\"currentCardIndex\", 0);\n//     localStorage.setItem(\"answeredCards\", JSON.stringify({}));\n\n//     // ✅ Remove disabledIKnowCards from localStorage\n//     localStorage.removeItem(\"disabledIKnowCards\");\n\n//     // ✅ Dispatch clearScore event after clearing localStorage\n//     window.dispatchEvent(new Event(\"clearScore\"));\n//   }}\n// >\n//   Clear Score\n// </button>\n\n//         {/* Dark Mode Toggle */}\n//         <button\n//           className=\"btn btn-dark mt-3 d-flex align-items-center justify-content-center\"\n//           onClick={() => setIsDarkMode(!isDarkMode)}\n//         >\n//           {isDarkMode ? <FaSun size={18} /> : <FaMoon size={18} />}\n//           <span className=\"ms-2\">{isDarkMode ? \"Light Mode\" : \"Dark Mode\"}</span>\n//         </button>\n//       </div>\n\n//       {/* Dark Mode Styles */}\n//       <style>\n//         {`\n//           .dark-mode {\n//             background-color: #121212;\n//             color: white;\n//           }\n//           .dark-mode .card {\n//             background-color: #1e1e1e;\n//             color: white;\n//           }\n//           .dark-mode .navbar {\n//             background-color: #333;\n//           }\n//         `}\n//       </style>\n//     </>\n//   );\n// };\n\n// export default FlashNavbar;\n\nimport React, { useState, useEffect } from \"react\";\nimport { FaCog, FaTimes, FaMoon, FaSun } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FlashNavbar = ({\n  setScore,\n  setProgress,\n  setCurrentCardIndex,\n  setAnsweredCards\n}) => {\n  _s();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isDarkMode, setIsDarkMode] = useState(JSON.parse(localStorage.getItem(\"darkMode\")) || false);\n  useEffect(() => {\n    if (isDarkMode) {\n      document.body.classList.add(\"dark-mode\");\n    } else {\n      document.body.classList.remove(\"dark-mode\");\n    }\n    localStorage.setItem(\"darkMode\", JSON.stringify(isDarkMode));\n  }, [isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"refresh-btn d-flex justify-content-end\",\n      style: {\n        marginTop: \"-12px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: () => {\n          setScore(0);\n          setProgress(0);\n          setCurrentCardIndex(0);\n          setAnsweredCards({});\n          localStorage.setItem(\"score\", 0);\n          localStorage.setItem(\"progress\", 0);\n          localStorage.setItem(\"currentCardIndex\", 0);\n          localStorage.setItem(\"answeredCards\", JSON.stringify({}));\n          localStorage.removeItem(\"disabledIKnowCards\");\n          window.dispatchEvent(new Event(\"clearScore\"));\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa-solid fa-arrows-rotate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(FlashNavbar, \"yuDSDJdn63rgGfh7rWGxse/UGpU=\");\n_c = FlashNavbar;\nexport default FlashNavbar;\nvar _c;\n$RefreshReg$(_c, \"FlashNavbar\");","map":{"version":3,"names":["React","useState","useEffect","FaCog","FaTimes","FaMoon","FaSun","jsxDEV","_jsxDEV","Fragment","_Fragment","FlashNavbar","setScore","setProgress","setCurrentCardIndex","setAnsweredCards","_s","isSidebarOpen","setIsSidebarOpen","isDarkMode","setIsDarkMode","JSON","parse","localStorage","getItem","document","body","classList","add","remove","setItem","stringify","children","className","style","marginTop","onClick","removeItem","window","dispatchEvent","Event","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/happy/Downloads/edzest-website-3/src/FlashcardApp/FlashNavbar.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { FaCog, FaTimes, FaMoon, FaSun } from \"react-icons/fa\";\r\n\r\n// const FlashNavbar = ({ setScore, setProgress, setCurrentCardIndex, setAnsweredCards }) => {\r\n//   const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n//   const [isDarkMode, setIsDarkMode] = useState(\r\n//     JSON.parse(localStorage.getItem(\"darkMode\")) || false\r\n//   );\r\n\r\n//   // Handle Dark Mode\r\n//   useEffect(() => {\r\n//     if (isDarkMode) {\r\n//       document.body.classList.add(\"dark-mode\");\r\n//     } else {\r\n//       document.body.classList.remove(\"dark-mode\");\r\n//     }\r\n//     localStorage.setItem(\"darkMode\", JSON.stringify(isDarkMode));\r\n//   }, [isDarkMode]);\r\n\r\n//   return (\r\n//     <>\r\n//       {/* Navbar */}\r\n//       <nav className=\"navbar navbar-dark bg-white px-3 d-flex justify-content-between\" style={{ marginTop: \"-21px\", marginBottom: \"-27px\" }}>\r\n//         <h4 className=\"m-0\" style={{ color: \"#4748ac\" }}>Flashcard</h4>\r\n//         <FaCog\r\n//           size={24}\r\n//           className=\"cursor-pointer\"\r\n//           onClick={() => setIsSidebarOpen(true)}\r\n//           style={{ cursor: \"pointer\", color: \"#4748ac\" }}\r\n//         />\r\n//       </nav>\r\n\r\n//       {/* ✅ Overlay to close sidebar when clicking outside */}\r\n//       {isSidebarOpen && (\r\n//         <div\r\n//           className=\"overlay\"\r\n//           onClick={() => setIsSidebarOpen(false)}\r\n//           style={{\r\n//             position: \"fixed\",\r\n//             top: 0,\r\n//             left: 0,\r\n//             width: \"100%\",\r\n//             height: \"100vh\",\r\n//             backgroundColor: \"rgba(0, 0, 0, 0.4)\",\r\n//             zIndex: 999, // Behind the sidebar\r\n//           }}\r\n//         ></div>\r\n//       )}\r\n\r\n//       {/* Sidebar */}\r\n//       <div\r\n//         className={`sidebar ${isSidebarOpen ? \"open\" : \"\"}`}\r\n//         style={{\r\n//           position: \"fixed\",\r\n//           top: 0,\r\n//           right: isSidebarOpen ? \"0\" : \"-250px\",\r\n//           width: \"250px\",\r\n//           height: \"100vh\",\r\n//           backgroundColor: \"#f8f9fa\",\r\n//           boxShadow: \"-2px 0 5px rgba(0, 0, 0, 0.2)\",\r\n//           transition: \"right 0.3s ease-in-out\",\r\n//           padding: \"20px\",\r\n//           display: \"flex\",\r\n//           flexDirection: \"column\",\r\n//           zIndex: 1000,\r\n//         }}\r\n//         onClick={(e) => e.stopPropagation()} // ✅ Prevent closing when clicking inside the sidebar\r\n//       >\r\n//         {/* Close Button */}\r\n//         <FaTimes\r\n//           size={24}\r\n//           style={{ cursor: \"pointer\", color: \"black\" }}\r\n//           onClick={() => setIsSidebarOpen(false)}\r\n//         />\r\n\r\n//         {/* Clear Score Button */}\r\n//         <button\r\n//   className=\"btn btn-danger mt-4\"\r\n//   onClick={() => {\r\n//     setScore(0);\r\n//     setProgress(0);\r\n//     setCurrentCardIndex(0);\r\n//     setAnsweredCards({});\r\n\r\n//     localStorage.setItem(\"score\", 0);\r\n//     localStorage.setItem(\"progress\", 0);\r\n//     localStorage.setItem(\"currentCardIndex\", 0);\r\n//     localStorage.setItem(\"answeredCards\", JSON.stringify({}));\r\n\r\n//     // ✅ Remove disabledIKnowCards from localStorage\r\n//     localStorage.removeItem(\"disabledIKnowCards\");\r\n\r\n//     // ✅ Dispatch clearScore event after clearing localStorage\r\n//     window.dispatchEvent(new Event(\"clearScore\"));\r\n//   }}\r\n// >\r\n//   Clear Score\r\n// </button>\r\n\r\n\r\n//         {/* Dark Mode Toggle */}\r\n//         <button\r\n//           className=\"btn btn-dark mt-3 d-flex align-items-center justify-content-center\"\r\n//           onClick={() => setIsDarkMode(!isDarkMode)}\r\n//         >\r\n//           {isDarkMode ? <FaSun size={18} /> : <FaMoon size={18} />}\r\n//           <span className=\"ms-2\">{isDarkMode ? \"Light Mode\" : \"Dark Mode\"}</span>\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Dark Mode Styles */}\r\n//       <style>\r\n//         {`\r\n//           .dark-mode {\r\n//             background-color: #121212;\r\n//             color: white;\r\n//           }\r\n//           .dark-mode .card {\r\n//             background-color: #1e1e1e;\r\n//             color: white;\r\n//           }\r\n//           .dark-mode .navbar {\r\n//             background-color: #333;\r\n//           }\r\n//         `}\r\n//       </style>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default FlashNavbar;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { FaCog, FaTimes, FaMoon, FaSun } from \"react-icons/fa\";\r\n\r\nconst FlashNavbar = ({ setScore, setProgress, setCurrentCardIndex, setAnsweredCards }) => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n  const [isDarkMode, setIsDarkMode] = useState(\r\n    JSON.parse(localStorage.getItem(\"darkMode\")) || false\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isDarkMode) {\r\n      document.body.classList.add(\"dark-mode\");\r\n    } else {\r\n      document.body.classList.remove(\"dark-mode\");\r\n    }\r\n    localStorage.setItem(\"darkMode\", JSON.stringify(isDarkMode));\r\n  }, [isDarkMode]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"refresh-btn d-flex justify-content-end\"style={{marginTop:\"-12px\"}}>\r\n      <button\r\n          className=\"btn btn-danger\"\r\n          onClick={() => {\r\n            setScore(0);\r\n            setProgress(0);\r\n            setCurrentCardIndex(0);\r\n            setAnsweredCards({});\r\n            localStorage.setItem(\"score\", 0);\r\n            localStorage.setItem(\"progress\", 0);\r\n            localStorage.setItem(\"currentCardIndex\", 0);\r\n            localStorage.setItem(\"answeredCards\", JSON.stringify({}));\r\n            localStorage.removeItem(\"disabledIKnowCards\");\r\n            window.dispatchEvent(new Event(\"clearScore\"));\r\n          }}\r\n        >\r\n          <i class=\"fa-solid fa-arrows-rotate\"></i>\r\n        \r\n        </button>\r\n        </div>\r\n\r\n      {/* {isSidebarOpen && (\r\n        <div\r\n          className=\"overlay\"\r\n          onClick={() => setIsSidebarOpen(false)}\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100vh\",\r\n            backgroundColor: \"rgba(0, 0, 0, 0.4)\",\r\n            zIndex: 999,\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <div\r\n        className={`sidebar ${isSidebarOpen ? \"open\" : \"\"}`}\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          right: isSidebarOpen ? \"0\" : \"-250px\",\r\n          width: \"250px\",\r\n          height: \"100vh\",\r\n          backgroundColor: \"#f8f9fa\",\r\n          boxShadow: \"-2px 0 5px rgba(0, 0, 0, 0.2)\",\r\n          transition: \"right 0.3s ease-in-out\",\r\n          padding: \"20px\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          zIndex: 1000,\r\n        }}\r\n        onClick={(e) => e.stopPropagation()}\r\n      >\r\n        <FaTimes\r\n          size={24}\r\n          style={{ cursor: \"pointer\", color: \"black\" }}\r\n          onClick={() => setIsSidebarOpen(false)}\r\n        />\r\n\r\n        \r\n\r\n        <button\r\n          className=\"btn btn-dark mt-3 d-flex align-items-center justify-content-center\"\r\n          onClick={() => setIsDarkMode(!isDarkMode)}\r\n        >\r\n          {isDarkMode ? <FaSun size={18} /> : <FaMoon size={18} />}\r\n          <span className=\"ms-2\">{isDarkMode ? \"Light Mode\" : \"Dark Mode\"}</span>\r\n        </button>\r\n      </div>\r\n\r\n      <style>\r\n        {`\r\n          .dark-mode {\r\n            background-color: #121212;\r\n            color: white;\r\n          }\r\n          .dark-mode .card {\r\n            background-color: #1e1e1e;\r\n            color: white;\r\n          }\r\n          .dark-mode .navbar {\r\n            background-color: #333;\r\n          }\r\n        `}\r\n      </style> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FlashNavbar;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/D,MAAMC,WAAW,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,mBAAmB;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACxF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAC1CoB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,KAClD,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACd,IAAIiB,UAAU,EAAE;MACdM,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1C,CAAC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;IAC7C;IACAN,YAAY,CAACO,OAAO,CAAC,UAAU,EAAET,IAAI,CAACU,SAAS,CAACZ,UAAU,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,oBACEX,OAAA,CAAAE,SAAA;IAAAsB,QAAA,eACExB,OAAA;MAAKyB,SAAS,EAAC,wCAAwC;MAAAC,KAAK,EAAE;QAACC,SAAS,EAAC;MAAO,CAAE;MAAAH,QAAA,eAClFxB,OAAA;QACIyB,SAAS,EAAC,gBAAgB;QAC1BG,OAAO,EAAEA,CAAA,KAAM;UACbxB,QAAQ,CAAC,CAAC,CAAC;UACXC,WAAW,CAAC,CAAC,CAAC;UACdC,mBAAmB,CAAC,CAAC,CAAC;UACtBC,gBAAgB,CAAC,CAAC,CAAC,CAAC;UACpBQ,YAAY,CAACO,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;UAChCP,YAAY,CAACO,OAAO,CAAC,UAAU,EAAE,CAAC,CAAC;UACnCP,YAAY,CAACO,OAAO,CAAC,kBAAkB,EAAE,CAAC,CAAC;UAC3CP,YAAY,CAACO,OAAO,CAAC,eAAe,EAAET,IAAI,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;UACzDR,YAAY,CAACc,UAAU,CAAC,oBAAoB,CAAC;UAC7CC,MAAM,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC/C,CAAE;QAAAR,QAAA,eAEFxB,OAAA;UAAGiC,KAAK,EAAC;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBAoER,CAAC;AAEP,CAAC;AAAC7B,EAAA,CA1GIL,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AA4GjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}